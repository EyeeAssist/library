(()=>{"use strict";class t{constructor(){this.hasInsertedAccess=!1,this.active_filter=!1,this.colorBlindnessClasses=["protanopia","protanomaly","deuteranopia","deuteranomaly","tritanopia","tritanomaly","achromatopsia","achromatomaly","grayscale"],this.visionClasses=["vision-loss-moderate","vision-loss-severe","vision-blindness"],this.cssFilter="\n  <style>.protanopia{-webkit-filter:url(#protanopia) grayscale(0)!important;filter:url(#protanopia) grayscale(0)!important}.protanomaly{-webkit-filter:url(#protanomaly) grayscale(0)!important;filter:url(#protanomaly) grayscale(0)!important}.deuteranopia{-webkit-filter:url(#deuteranopia) grayscale(0)!important;filter:url(#deuteranopia) grayscale(0)!important}.deuteranomaly{-webkit-filter:url(#deuteranomaly) grayscale(0)!important;filter:url(#deuteranomaly) grayscale(0)!important}.tritanopia{-webkit-filter:url(#tritanopia) grayscale(0)!important;filter:url(#tritanopia) grayscale(0)!important}.tritanomaly{-webkit-filter:url(#tritanomaly) grayscale(0)!important;filter:url(#tritanomaly) grayscale(0)!important}.achromatopsia{-webkit-filter:url(#achromatopsia) grayscale(0)!important;filter:url(#achromatopsia) grayscale(0)!important}.achromatomaly{-webkit-filter:url(#achromatomaly) grayscale(0)!important;filter:url(#achromatomaly) grayscale(0)!important}.grayscale{-webkit-filter:grayscale(100%)!important;filter:grayscale(100%)!important}.vision-loss-moderate body>*{-webkit-filter:blur(1px)!important;filter:blur(1px)!important}.vision-loss-severe body>*{-webkit-filter:blur(10px)!important;filter:blur(10px)!important}.vision-blindness body>*{background-color:#fff!important;-webkit-filter:brightness(0)!important;filter:brightness(0)!important}#access-filter{border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;width:1px;overflow:hidden;position:absolute!important;word-wrap:normal!important}</style>",this.svgFilterTemplate='<svg \n  id="access-filter"\n  aria-hidden="true"\n  xmlns="http://www.w3.org/2000/svg"\n  version="1.1">\n  <defs>\n    <filter id="protanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.567, 0.433, 0,     0, 0\n                0.558, 0.442, 0,     0, 0\n                0,     0.242, 0.758, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="protanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.817, 0.183, 0,     0, 0\n                0.333, 0.667, 0,     0, 0\n                0,     0.125, 0.875, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="deuteranopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.625, 0.375, 0,   0, 0\n                0.7,   0.3,   0,   0, 0\n                0,     0.3,   0.7, 0, 0\n                0,     0,     0,   1, 0"/>\n    </filter>\n    <filter id="deuteranomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.8,   0.2,   0,     0, 0\n                0.258, 0.742, 0,     0, 0\n                0,     0.142, 0.858, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.95, 0.05,  0,     0, 0\n                0,    0.433, 0.567, 0, 0\n                0,    0.475, 0.525, 0, 0\n                0,    0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.967, 0.033, 0,     0, 0\n                0,     0.733, 0.267, 0, 0\n                0,     0.183, 0.817, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatopsia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.618, 0.320, 0.062, 0, 0\n                0.163, 0.775, 0.062, 0, 0\n                0.163, 0.320, 0.516, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n  </defs>\n</svg>'}aplicarFiltro(t){null!=t?(this.active_filter?this.removeTests("colorBlindness"):this.toggleTest("colorBlindness",t),this.active_filter=!this.active_filter):console.error("Error al aplicar los filtros, la opcion no se pintada correctamente")}toggleTest(t,e){this.hasInsertedAccess||(this.insertFiles(this.svgFilterTemplate,this.cssFilter),this.hasInsertedAccess=!0),this.removeTests(t),document.documentElement.classList.add(e)}insertFiles(t,e){document.body.insertAdjacentHTML("beforeend",t),document.body.insertAdjacentHTML("beforeend",e)}removeTests(t){if("vision"==t)for(let t=0;t<this.visionClasses.length;t++)document.documentElement.classList.remove(this.visionClasses[t]);else if("colorBlindness"==t)for(let t=0;t<this.colorBlindnessClasses.length;t++)document.documentElement.classList.remove(this.colorBlindnessClasses[t])}}class e{static addFilterBufferStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .filter-list-buffer {\n          margin-top: 15px;\n          display: flex;\n          flex-wrap: wrap;\n          flex-direction: column;\n          width: 100%;\n        }\n    ",t.cssRules.length)}static addFilterOptionsStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .filter-option {\n          padding: 0.5rem;\n        }\n    ",t.cssRules.length)}static addFilterStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .filter_button {\n          position: fixed;\n          top: 20px;\n          right: 20px;\n          width: 50px;\n          height: 50px;\n          border-radius: 50%;\n          background-color: #243c5a;\n          color: #ffffff;\n          text-align: center;\n          line-height: 50px;\n          cursor: pointer;\n          z-index: 9999;\n        }\n    ",t.cssRules.length)}}class s{constructor(s=!1){this.enableFilter=s,this.filterViewOn=!1,this.startFilter=t=>{var e,s=null===(e=t.target.textContent)||void 0===e?void 0:e.toLowerCase();console.log(s),this.filterService.aplicarFiltro(s)},this.showFilterOptionsList=()=>{if(!this.enableFilter){var t=document.getElementById("filter_buffer");return null==t?void console.error("No hay instancia del buffer de opciones."):(t.remove(),"")}var e=document.createElement("div");e.className="filter-list-buffer",e.id="filter_buffer";var s=document.createElement("span");s.textContent="Seleccione un filtro para distinguir mejor los siguientes colores:",s.style.marginBottom="5px",e.appendChild(s),[{id:"protanopia",name:"Protanopia"},{id:"deuteranopia",name:"Deuteranopia"},{id:"tritanopia",name:"Tritanopia"},{id:"grayscale",name:"Grayscale"}].forEach((t=>{e.appendChild(this.buildFilterOption(t))}));var i=document.createElement("div");return i.style.display="flex",i.style.flexDirection="row",i.style.alignContent="center",i.style.alignItems="center",i.style.justifyItems="center",i.style.justifyContent="center",["#FFFF00","#FF0000","#FFA500","#FFFF00","#008000","#0000FF","#4B0082","#9400D3","#FFFF00"].forEach((t=>{var e=document.createElement("div");e.style.display="block",e.style.width="20px",e.style.height="25px",e.style.backgroundColor=t,i.appendChild(e)})),e.appendChild(i),e},this.filterService=new t,e.addFilterBufferStyleClass(),e.addFilterOptionsStyleClass()}status(){return this.enableFilter}toggleStatus(){this.enableFilter=!this.enableFilter}showFilterOptions(){const t=document.createElement("img");t.src="https://github.com/EyeeAssist/docs/blob/develop/src/assets/logo.png?raw=true",t.style.width="50px",t.style.borderRadius="50%";const s=document.createElement("div");s.className="filter_button",s.id="filter_button",s.appendChild(t),s.addEventListener("click",this.showFilterOptionsList),e.addFilterStyleClass(),document.body.appendChild(s)}buildFilterOption(t){var e=document.createElement("div");e.className="filter-option",e.style.display="flex",e.id=t.id+"_option",e.addEventListener("click",this.startFilter);const s=document.createElement("div"),i=document.createElement("input");i.type="radio",i.style.margin="0",s.style.marginLeft="6px";const n=document.createElement("span");return n.textContent=t.name,n.style.marginLeft="12px",s.append(i),e.append(s),e.append(n),e}}class i{constructor(t=!1,e){this.foundVideo=t,this.talk=e,this.onPlayerStateChange=t=>{t.data===YT.PlayerState.PAUSED&&clearInterval(this.interval),t.data==YT.PlayerState.ENDED&&clearInterval(this.interval),t.data===YT.PlayerState.PLAYING&&(this.interval=setInterval((()=>{var t,e,s;const i=null===(t=this.player)||void 0===t?void 0:t.getCurrentTime(),n=null==i?void 0:i.toFixed(1);(null===(e=this.script)||void 0===e?void 0:e.get(n))&&this.talk(null===(s=this.script)||void 0===s?void 0:s.get(n))}),100))}}toggleStatus(){this.foundVideo=!this.foundVideo}turnOff(){this.foundVideo=!1}startAudioDescription(t){var e,s,i;this.foundVideo&&!0===t.shiftKey&&"k"===t.key.toLowerCase()&&((null===(e=this.player)||void 0===e?void 0:e.getPlayerState())==YT.PlayerState.PLAYING?null===(s=this.player)||void 0===s||s.pauseVideo():null===(i=this.player)||void 0===i||i.playVideo())}createPlayer(t){let e=t;e.id="single-video-eyeeassit",this.script=this.getScript(e.src);const s=e.src.indexOf("?");e.src=e.src.substring(0,s+1)+"enablejsapi=1&"+e.src.substring(s+1),this.player=new YT.Player(e.id,{events:{onStateChange:this.onPlayerStateChange}})}getScript(t){const e=new Map;return e.set("1.0","Paisaje de una playa"),e.set("13.0","Paisaje de unas mota√±as y una bandera ondeando"),e.set("28.0","Paisaje con una costa y olas rompiendo"),e.set("40.0","Una laguna artificial"),e.set("56.0","Un rio largo"),e}}var n,o=function(t,e,s,i){return new(s||(s=Promise))((function(n,o){function a(t){try{r(i.next(t))}catch(t){o(t)}}function l(t){try{r(i.throw(t))}catch(t){o(t)}}function r(t){var e;t.done?n(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(a,l)}r((i=i.apply(t,e||[])).next())}))};class a{constructor(t=!1,e=""){var s;if(this.useScreenReader=t,this.token=e,this.synth=window.speechSynthesis,this.screenReaderStatus=!1,this.selectedArticle=null,this.selectedLink=null,this.articleIndex=-1,this.linkIndex=0,this.controller=new AbortController,this.videoProcesor=null,this.tags=[],this.talk=(t,e=!0)=>{!e||this.synth.cancel(),this.synth.speak(new SpeechSynthesisUtterance(t))},this.cancelTalk=()=>{this.controller&&this.controller.abort(),this.talk("")},!this.useScreenReader)return;let n=document.createElement("script");n.src="https://www.youtube.com/iframe_api";let o=document.getElementsByTagName("script")[0];null===(s=o.parentNode)||void 0===s||s.insertBefore(n,o),this.videoProcesor=new i(!1,this.talk)}status(){return this.useScreenReader}toggleStatus(){this.useScreenReader=!this.useScreenReader}enable(){return this.screenReaderStatus}sayWelcome(){this.talk("Hola bienvenido a la pagina X, si desea leer el contenido precione control + flecha derecha o precione control + enter para navegar por los links")}sayGoodbay(){this.talk("Gracias por utilizar eyeeassist")}keybindsScreenReader(t){var e;this.cancelReader(t),this.reRead(t),this.activeScreenReader(t),this.moveBetweenContent(t),this.moveBetweenLinks(t),null===(e=this.videoProcesor)||void 0===e||e.startAudioDescription(t)}getImage(t){return o(this,void 0,void 0,(function*(){return yield fetch(t)}))}getDescription(t){return o(this,void 0,void 0,(function*(){this.controller=new AbortController;const e=new FormData;e.append("file",t,"imagen.jpg");const s={method:"POST",body:e,headers:{Authorization:"Bearer "+this.token},signal:this.controller.signal},i=yield fetch("http://localhost:8000/caption",s).catch((t=>{"AbortError"===t.name&&console.error(t)}));return null!=i?(yield i.json()).message[0]:""}))}readChilds(t){var e,s,i;return o(this,void 0,void 0,(function*(){if("IFRAME"==t.nodeName&&(this.talk("Video encontrado, precione shift mas k para iniciar el video con audio descripcion"),null===(e=this.videoProcesor)||void 0===e||e.toggleStatus(),null===(s=this.videoProcesor)||void 0===s||s.createPlayer(t)),"IMG"==t.nodeName){this.talk("Imagen encontrada",!1);let e=t;if(""!=e.alt)this.talk(""),this.talk("Imagen de "+e.alt,!1);else{const t=yield this.getImage(e.src),s=yield t.blob();this.talk("describiendo imagen",!1);const i=yield this.getDescription(s);""!=i?this.talk("Imagen de "+i,!1):this.talk("No se pudo generar una descripcion para la imagen encontrada.",!1)}}t.nodeType==Node.TEXT_NODE&&(null===(i=t.textContent)||void 0===i?void 0:i.trim())&&this.talk(t.textContent,!1);for(const e of Array.from(t.childNodes))yield this.readChilds(e)}))}moveBetweenContent(t){if(0!=this.tags.length){if(this.screenReaderStatus&&!0===t.ctrlKey&&"arrowright"===t.key.toLowerCase()){let t=this.tags.shift();this.tags.push(t),this.cancelTalk(),this.readChilds(t)}if(this.screenReaderStatus&&!0===t.ctrlKey&&"arrowleft"===t.key.toLowerCase()){let t=this.tags.pop();this.tags.unshift(t),this.cancelTalk(),this.readChilds(t)}}}activeScreenReader(t){this.useScreenReader&&!0===t.ctrlKey&&" "===t.key.toLowerCase()&&(this.screenReaderStatus?(this.tags=[],this.sayGoodbay()):(this.tags=this.convertToHtmlElementsArray(document.getElementsByTagName("article")),this.sayWelcome()),this.screenReaderStatus=!this.screenReaderStatus)}moveBetweenLinks(t){if(this.screenReaderStatus&&!1===t.ctrlKey&&"enter"===t.key.toLowerCase()&&null!=this.selectedLink&&(console.log(this.selectedLink),this.selectedLink.click()),this.screenReaderStatus&&!0===t.ctrlKey&&"enter"===t.key.toLowerCase()){let t=document.getElementsByClassName("text_reader_link");console.log(t[this.linkIndex].tagName),this.selectedLink=t[this.linkIndex],this.selectedLink.focus(),"TEXTAREA"==t[this.linkIndex].tagName?(this.selectedLink.addEventListener("input",(()=>{console.log(this.selectedLink)})),this.talk("Seleccionado un text area",!0)):(console.log(this.selectedLink.textContent),null!==this.selectedLink.textContent&&this.talk(this.selectedLink.textContent,!0)),this.linkIndex===t.length-1?this.linkIndex=0:this.linkIndex+=1}}cancelReader(t){this.useScreenReader&&"escape"===t.key.toLowerCase()&&this.talk("")}reRead(t){this.useScreenReader&&!0===t.ctrlKey&&"backspace"===t.key.toLowerCase()&&null!=this.selectedArticle&&null!=this.selectedArticle.textContent&&this.talk(this.selectedArticle.textContent)}convertToHtmlElementsArray(t){let e=[];for(const s of t)e.push(s);return e}}class l{static addZoomMessageTextBoxClass(){const t=document.styleSheets[0];t.insertRule(".zoom-message-txtbox {  \n          display: flex;\n          align-items: center;\n          justify-content: center;\n          position: fixed;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          z-index: 9999;\n          background-color: #F5F5DC;\n          color: #004D00;\n          font-size: 20rem;\n          text-align: center;\n          width: 80%;\n          height: 80%;\n          font-family: Arial, sans-serif;\n      }",t.cssRules.length)}}class r{constructor(){this.TRANSITION_DURATION=800,this.level=1,this.mouseX=0,this.mouseY=0,this.panEngageTimeout=-1,this.panUpdateInterval=-1,this.callbackTimeout=-1,this.supportsTransforms="WebkitTransform"in document.body.style||"MozTransform"in document.body.style||"msTransform"in document.body.style||"OTransform"in document.body.style||"transform"in document.body.style,this.keyupEvent=t=>{1!==this.level&&27===t.keyCode&&this.out(void 0)},this.mouseMoveEvent=t=>{1!==this.level&&(this.mouseX=t.clientX,this.mouseY=t.clientY)},this.supportsTransforms&&(document.body.style.transition="transform "+this.TRANSITION_DURATION+"ms ease"),document.addEventListener("keyup",this.keyupEvent),document.addEventListener("mousemove",this.mouseMoveEvent)}magnify(t,e){var s=this.getScrollOffset();if(t.width=t.width||1,t.height=t.height||1,t.x-=(window.innerWidth-t.width*e)/2,t.y-=(window.innerHeight-t.height*e)/2,this.supportsTransforms)if(1===e)document.body.style.transform="";else{var i=s.x+"px "+s.y+"px",n="translate("+-t.x+"px,"+-t.y+"px) scale("+e+")";document.body.style.transformOrigin=i,document.body.style.transform=n}else 1===e?(document.body.style.position="",document.body.style.left="",document.body.style.top="",document.body.style.width="",document.body.style.height=""):(document.body.style.position="relative",document.body.style.left=-(s.x+t.x)/e+"px",document.body.style.top=-(s.y+t.y)/e+"px",document.body.style.width=100*e+"%",document.body.style.height=100*e+"%");this.level=e}pan(){var t=.12*window.innerWidth,e=.12*window.innerHeight,s=this.getScrollOffset();this.mouseY<e?window.scroll(s.x,s.y-(1-this.mouseY/e)*(14/this.level)):this.mouseY>window.innerHeight-e&&window.scroll(s.x,s.y+(1-(window.innerHeight-this.mouseY)/e)*(14/this.level)),this.mouseX<t?window.scroll(s.x-(1-this.mouseX/t)*(14/this.level),s.y):this.mouseX>window.innerWidth-t&&window.scroll(s.x+(1-(window.innerWidth-this.mouseX)/t)*(14/this.level),s.y)}getScrollOffset(){return{x:void 0!==window.scrollX?window.scrollX:window.pageXOffset,y:void 0!==window.scrollY?window.scrollY:window.pageYOffset}}to(t){if(1!==this.level)this.out(void 0);else{if(t.x=t.x||0,t.y=t.y||0,t.element){var e="number"==typeof t.padding?t.padding:20,s=t.element.getBoundingClientRect();t.x=s.left-e,t.y=s.top-e,t.width=s.width+2*e,t.height=s.height+2*e}void 0!==t.width&&void 0!==t.height&&(t.scale=Math.max(Math.min(window.innerWidth/t.width,window.innerHeight/t.height),1)),t.scale>1&&(t.x*=t.scale,t.y*=t.scale,t.x=Math.max(t.x,0),t.y=Math.max(t.y,0),this.magnify(t,t.scale),!1!==t.pan&&(this.panEngageTimeout=setTimeout(this.calculatePanUpdateInterval,this.TRANSITION_DURATION)),"function"==typeof t.callback&&(this.callbackTimeout=setTimeout(t.callback,this.TRANSITION_DURATION)))}}calculatePanUpdateInterval(){this.panUpdateInterval=setInterval(this.pan,1e3/60)}out(t){clearTimeout(this.panEngageTimeout),clearInterval(this.panUpdateInterval),clearTimeout(this.callbackTimeout),this.magnify(new c(0,0,1),1),t&&"function"==typeof t.callback&&setTimeout(t.callback,this.TRANSITION_DURATION),this.level=1}}class c{constructor(t,e,s){this.x=0,this.y=0,this.scale=0,this.x=t,this.y=e,this.scale=s}}class d{constructor(t=!1){this.enableZoomOptions=t,this.zoomStatus=!1,this.active_message='<div id="zoom-status" class="zoom-message-txtbox">On</div>',this.deactive_message='<div id="zoom-status" class="zoom-message-txtbox">Off</div>',this.toogleZoom=t=>{this.zoomService.to(new c(t.x,t.y,10))},this.zoomService=new r}status(){return this.enableZoomOptions}toogleStatus(){this.enableZoomOptions=!this.enableZoomOptions}activeZoom(t,e){this.enableZoomOptions&&(t||!0!==e.ctrlKey||"backspace"!==e.key.toLowerCase()||(l.addZoomMessageTextBoxClass(),this.initialClickEvent(document.body)))}initialClickEvent(t){this.zoomStatus?this.showBoxMessage(t,this.deactive_message,!this.zoomStatus):this.showBoxMessage(t,this.active_message,!this.zoomStatus),this.zoomStatus=!this.zoomStatus}showBoxMessage(t,e,s){t.insertAdjacentHTML("beforebegin",e),setTimeout((()=>{const t=document.getElementById("zoom-status");null==t||t.remove()}),2e3),s?t.addEventListener("click",this.toogleZoom):t.removeEventListener("click",this.toogleZoom)}}class h{static getBackgroundColor(){return"#243C5A"}static getForegroundColor(){return"#FFFFFF"}}class u{static mainMessage(t){return t.style.display="flex",t.style.alignItems="center",t.style.alignContent="center",t.style.justifyItems="center",t.style.justifyContent="center",t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.backgroundColor=h.getBackgroundColor(),t.style.zIndex="999",t.style.color=h.getForegroundColor(),t}static messageContent(t){return t.style.textAlign="center",t.style.flex="1",t.style.display="flex",t.style.flexDirection="row",t.style.alignContent="center",t.style.justifyContent="center",t.style.justifyItems="center",t.style.alignItems="center",t}static closeButtom(t){return t.style.background="none",t.style.border="none",t.style.padding="0",t.style.margin="0",t.style.cursor="pointer",t.style.width="50px",t.style.height="50px",t.style.color=h.getForegroundColor(),t}static addFlyMenuStyle(){const t=document.styleSheets[0],e=`\n        .fly_menu {\n          position: fixed;\n          right: 70px;\n          width: 72px;\n          height: 72px;\n          border-radius: 50%;\n          background-color: ${h.getBackgroundColor()};\n          color: ${h.getForegroundColor()};\n          text-align: center;\n          line-height: 50px;\n          flex-wrap: wrap;\n          cursor: pointer;\n          display: flex;\n          align-content: center;\n          justify-content: center;\n          z-index: 9999;\n        }\n    `;t.insertRule(e,t.cssRules.length)}static svgEyee(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("width","34"),t.setAttribute("height","26"),t.setAttribute("viewBox","0 0 34 26"),t.setAttribute("fill","none");const e=document.createElementNS("http://www.w3.org/2000/svg","path");e.setAttribute("d","M17.3208 0.00330279C21.1597 0.109866 24.644 1.38863 27.7511 3.91482C30.543 6.184 32.5919 9.11763 33.9316 12.6656C34.016 12.8912 34.0273 13.0856 33.9372 13.3175C32.1304 18.0627 29.1639 21.6107 25.0323 23.9237C23.1523 24.9768 21.1484 25.6099 19.0488 25.8669C15.5589 26.2995 12.2323 25.6789 9.07448 23.9864C6.18687 22.4381 3.82837 20.1814 1.98772 17.2541C1.19968 16.0004 0.541103 14.6715 0.0401335 13.2485C-0.0105264 13.1044 -0.0161553 12.8975 0.0401335 12.7533C2.20162 7.06785 5.88854 3.16887 11.1009 1.09401C12.9471 0.354336 14.9454 -0.0405764 17.3208 0.00330279Z"),e.setAttribute("fill","white");const s=document.createElementNS("http://www.w3.org/2000/svg","circle");s.setAttribute("cx","17.5"),s.setAttribute("cy","13.5"),s.setAttribute("r","7.5"),s.setAttribute("fill","#28405D");const i=document.createElementNS("http://www.w3.org/2000/svg","path");return i.setAttribute("fill-rule","evenodd"),i.setAttribute("clip-rule","evenodd"),i.setAttribute("d","M17.0377 6.02181C17.2247 6.00736 17.4137 6 17.6044 6C21.6117 6 24.8603 9.24854 24.8603 13.2558C24.8603 13.5069 24.8475 13.755 24.8226 13.9996C24.6356 14.014 24.4466 14.0214 24.2558 14.0214C20.2485 14.0214 17 10.7729 17 6.76558C17 6.51447 17.0128 6.26635 17.0377 6.02181Z"),i.setAttribute("fill","#506F95"),t.appendChild(e),t.appendChild(s),t.appendChild(i),t}static svgHuman(t,e="34",s="38"){const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttribute("width",e),i.setAttribute("height",s),i.setAttribute("viewBox","0 0 34 38"),i.setAttribute("xmlns","http://www.w3.org/2000/svg");const n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d","M33.5 13.5H22.5V37.3333H18.8333V26.3333H15.1667V37.3333H11.5V13.5H0.5V9.83332H33.5M17 0.666656C17.9725 0.666656 18.9051 1.05296 19.5927 1.7406C20.2804 2.42823 20.6667 3.36086 20.6667 4.33332C20.6667 5.30578 20.2804 6.23841 19.5927 6.92605C18.9051 7.61368 17.9725 7.99999 17 7.99999C16.0275 7.99999 15.0949 7.61368 14.4073 6.92605C13.7196 6.23841 13.3333 5.30578 13.3333 4.33332C13.3333 2.29832 14.965 0.666656 17 0.666656Z"),n.setAttribute("fill",t),i.appendChild(n),i}static svgCloseButtom(t){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.setAttribute("fill",t),e.setAttribute("viewBox","0 0 32 32");const s=document.createElementNS("http://www.w3.org/2000/svg","path");return s.setAttribute("d","M7.004 23.087l7.08-7.081-7.07-7.071L8.929 7.02l7.067 7.069L23.084 7l1.912 1.913-7.089 7.093 7.075 7.077-1.912 1.913-7.074-7.073L8.917 25z"),e.appendChild(s),e}static addBufferOptionsClass(){const t=document.styleSheets[0],e=`\n        .buffer_options {\n            position: fixed;\n            top: 130px;\n            right: 70px;\n            border-radius: 10px;\n            height: auto; \n            max-height: 100%;\n            overflow-y: auto; \n            z-index: 9999;\n            background-color: ${h.getBackgroundColor()};\n            color: ${h.getForegroundColor()};\n        }\n    `;t.insertRule(e,t.cssRules.length)}static toggleSwitchClasses(){this.toogleSwitchClass(),this.toggleSwitchCircle(),this.toggleSwitchActive(),this.toggleSwitchAnimation()}static toogleSwitchClass(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch {\n            width: 60px;\n            height: 30px;\n            background-color: #ccc;\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            cursor: pointer;\n            transition: background-color 0.3s, transform 0.3s;\n        }\n    ",t.cssRules.length)}static toggleSwitchCircle(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch-circle {\n            width: 30px;\n            height: 30px;\n            background-color: white;\n            border-radius: 50%;\n            transition: transform 0.3s;\n        }",t.cssRules.length)}static toggleSwitchActive(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch.active {\n            background-color: #2ecc71;\n        }",t.cssRules.length)}static toggleSwitchAnimation(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch.active .toggle-switch-circle {\n            transform: translateX(30px);\n        }",t.cssRules.length)}static addOptionFunctionsClass(){const t=document.styleSheets[0];t.insertRule("\n        .option_menu_eyeeassist {\n          display: flex;\n          padding: 10px;\n          justify-content: space-between;\n        }",t.cssRules.length)}static overlayStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .overlay-menu-view {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n            background-color: rgba(0, 0, 0, 0.5);\n        }",t.cssRules.length)}}class p{constructor(t,e,s,i=!1,o){this.functionalityId=t,this.text=e,this.position=s,this.active=i,this.toggleToolStatus=o,this.toggleOposiveButton=null,this.toggleState=()=>{this.active=!this.active},this.changeButtonState=()=>{const t=document.getElementById(this.functionalityId+"-button-eyeassist-"+this.text);if(!1===this.active){if(null!=t&&(t.style.backgroundColor=h.getBackgroundColor(),t.style.color=h.getForegroundColor()),this.position==n.LEFT){const t=document.getElementById(this.functionalityId+"-button-eyeassist-No");null!=t&&(t.style.backgroundColor=h.getForegroundColor(),t.style.color=h.getBackgroundColor())}else{const t=document.getElementById(this.functionalityId+"-button-eyeassist-Si");null!=t&&(t.style.backgroundColor=h.getForegroundColor(),t.style.color=h.getBackgroundColor())}this.toggleToolStatus(this.functionalityId+"-card-option-eyeassist"),this.active=!this.active,this.toggleOposiveButton&&this.toggleOposiveButton()}},this.element=this.createButtom()}createButtom(){const t=document.createElement("div");t.id=this.functionalityId+"-button-eyeassist-"+this.text,t.addEventListener("click",this.changeButtonState),t.style.marginTop="20px",t.style.width="104px",t.style.height="48px",t.style.cursor="pointer",this.position==n.LEFT?t.style.borderRadius="50px 0 0 50px":t.style.borderRadius="0 50px 50px 0",t.style.border=`1px solid ${h.getForegroundColor()}`,t.style.padding="10px",t.style.display="flex",t.style.alignContent="center",t.style.alignItems="center",t.style.justifyContent="center",t.style.justifyItems="center",this.active?(t.style.backgroundColor=h.getBackgroundColor(),t.style.color=h.getForegroundColor()):(t.style.backgroundColor=h.getForegroundColor(),t.style.color=h.getBackgroundColor());const e=document.createElement("span");return e.textContent=this.text,e.style.cursor="pointer",t.appendChild(e),t}assignChangeOposiveStateButton(t){this.toggleOposiveButton=t}getElement(){return this.element}}class g{static zoomIconSvg(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("width","44"),t.setAttribute("height","44"),t.setAttribute("viewBox","0 0 44 44"),t.setAttribute("fill","none");const e=document.createElementNS("http://www.w3.org/2000/svg","path");return e.setAttribute("d","M34.4723 31.5047C37.5191 34.5183 40.4996 37.532 43.4471 40.4795C42.4867 41.4399 41.4932 42.4003 40.4003 43.5263C40.334 43.3938 40.2347 43.162 40.1022 43.0295C37.3866 40.3139 34.671 37.5983 31.9554 34.8495C31.6242 34.5183 31.4255 34.4521 31.0281 34.7502C21.4903 41.8704 7.9784 38.7243 2.54715 28.1267C-2.1224 18.9863 1.45428 7.62706 10.4953 2.75881C22.1526 -3.50037 36.4262 3.58674 38.4132 16.6681C39.2081 21.8675 37.9827 26.6033 34.9028 30.8754C34.7703 31.041 34.6379 31.2397 34.4392 31.5047H34.4723ZM17.45 21.7019C17.45 22.0331 17.45 22.2649 17.45 22.4967C17.45 24.1526 17.45 25.8085 17.45 27.4975C17.45 27.8949 17.5824 28.0605 17.9798 28.0273C18.7084 28.0273 19.4039 28.0273 20.1325 28.0273C20.6623 28.0273 21.1922 28.0273 21.7883 28.0273V21.7019C22.0864 21.7019 22.2851 21.7019 22.5169 21.7019C24.1728 21.7019 25.8618 21.7019 27.5176 21.7019C28.0475 21.7019 28.18 21.5363 28.18 21.0065C28.1469 20.0129 28.18 18.9863 28.18 17.9597C28.18 17.496 28.0806 17.3304 27.5839 17.3636C25.8949 17.3636 24.1728 17.3636 22.4838 17.3636C22.2851 17.3636 22.0533 17.3636 21.7883 17.3636V11.005C20.4968 11.005 19.2714 11.005 18.0461 11.005C17.6487 11.005 17.4831 11.1375 17.4831 11.5349C17.4831 13.0252 17.4831 14.5155 17.4831 16.0057C17.4831 16.4363 17.4831 16.8668 17.4831 17.3636H11.1908V21.6688H17.4831L17.45 21.7019Z"),e.setAttribute("fill","#243C5A"),t.appendChild(e),t}static filterIconSvg(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("width","47"),t.setAttribute("height","44"),t.setAttribute("viewBox","0 0 47 44"),t.setAttribute("fill","none");const e=document.createElementNS("http://www.w3.org/2000/svg","path");return e.setAttribute("d","M26.4442 42.0029C29.6566 38.7905 31.3787 34.982 31.743 30.5443C31.743 30.2131 32.0079 29.7495 32.306 29.5839C36.545 26.9345 39.2938 23.1922 40.4529 18.324C40.4529 18.2577 40.5522 18.2246 40.6185 18.1584C45.1887 20.6753 48.8316 28.6897 45.0231 35.9093C40.9165 43.6919 31.8755 45.0165 26.4442 41.9698V42.0029ZM1.87116 36.0749C5.97771 43.725 15.0519 45.0497 20.2844 42.036C20.1851 41.9035 20.1188 41.771 20.0195 41.6386C17.0389 38.5255 15.383 34.8164 15.085 30.5112C15.085 30.18 14.7869 29.7495 14.4889 29.5507C10.1174 26.8682 7.43487 23.0266 6.24265 18.0921C1.60622 20.5759 -2.10293 28.7228 1.83804 36.0417L1.87116 36.0749ZM21.9403 0.539948C15.7473 1.06983 9.32256 7.26277 9.68685 12.4622C9.75309 12.4622 9.85244 12.5284 9.91867 12.5284C10.1505 12.5284 10.4154 12.4622 10.6473 12.4291C14.257 11.6343 17.8337 11.8992 21.1455 13.522C22.8013 14.3168 24.0598 14.3168 25.7157 13.522C29.3586 11.7667 33.2333 11.6343 37.2736 12.694C36.8762 7.16342 31.3456 -0.188633 21.9734 0.606184L21.9403 0.539948ZM37.373 16.2376C33.5976 14.9791 30.0209 15.1116 26.378 16.8337C29.0274 19.45 30.617 22.4305 31.4781 26.0403C34.8892 23.4903 36.81 20.311 37.373 16.2045V16.2376ZM20.0857 16.6681C19.887 16.5356 19.6552 16.4363 19.4234 16.37C16.509 15.2441 13.5947 15.1447 10.581 15.8733C9.5875 16.1051 9.48815 16.635 9.68685 17.4629C10.283 19.9798 11.3758 22.1987 13.1642 24.0533C13.8265 24.7156 14.5551 25.3117 15.4162 26.1065C16.2772 22.4305 17.8668 19.4831 20.3506 16.9662C20.2513 16.8337 20.2182 16.7012 20.1188 16.6681H20.0857ZM18.7279 27.0007C18.6617 27.2656 19.1253 27.8618 19.4234 27.9611C22.0396 28.789 24.7221 28.7559 27.3715 28.0274C27.9676 27.8618 28.2657 27.5968 28.1332 26.9014C27.504 23.689 25.9806 20.9734 23.4637 18.7876C20.8143 20.9734 19.3571 23.7552 18.7279 27.0007ZM28.1663 31.3391C24.9208 32.2001 21.8409 32.167 18.5954 31.3391C19.1915 34.9489 20.7149 37.797 23.4306 40.1483C26.0468 37.7307 27.7027 34.982 28.1663 31.3391Z"),e.setAttribute("fill","#243C5A"),t.appendChild(e),t}static voiceIconSvg(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("width","51"),t.setAttribute("height","44"),t.setAttribute("viewBox","0 0 51 44"),t.setAttribute("fill","none");const e=document.createElementNS("http://www.w3.org/2000/svg","path");return e.setAttribute("d","M0.354146 43.8639C-0.970548 35.8495 4.59317 29.0936 11.614 28.3319C14.5946 28.0007 17.6414 28.067 20.6551 28.3319C26.55 28.8287 31.6832 34.2599 32.0475 40.1879C32.1137 41.3801 32.0475 42.5724 32.0475 43.8639H0.354146ZM25.4571 16.2109C25.4571 11.0115 21.4499 6.93808 16.2505 6.90496C10.9517 6.83873 6.87826 10.8459 6.84515 16.1116C6.81203 21.4104 10.7861 25.4838 16.0849 25.4838C21.3505 25.4838 25.4571 21.4435 25.4571 16.2109ZM43.9697 0.811371C42.7444 2.0036 41.5521 3.19582 40.3268 4.38804C43.7048 8.03095 45.5593 12.3693 45.5593 17.4694C45.5593 22.5695 43.6716 26.8747 40.2606 30.5176C41.4859 31.743 42.645 32.9021 43.8703 34.1274C53.1101 25.4176 53.1432 9.48812 44.0028 0.811371H43.9697ZM32.7429 11.9057C35.6904 15.8135 35.6904 18.8603 32.9085 23.0331C34.0345 24.2916 35.1605 25.55 36.2534 26.7754C41.3865 22.4701 41.3866 12.9323 36.4852 8.4946C35.1605 9.68682 33.9351 10.8128 32.7429 11.9057Z"),e.setAttribute("fill","#243C5A"),t.appendChild(e),t}static optionCardStyle(){const t=document.styleSheets[0],e=`\n        .option-card-eyeeassist {\n          position: relative;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          justify-items: center;\n          background-color: ${h.getBackgroundColor()};\n          width: 30%;\n          padding: 50px;\n          border-radius: 16px;\n          color: ${h.getForegroundColor()};\n          font-size: 22px;\n        }\n    `;t.insertRule(e,t.cssRules.length)}}class m{constructor(t,e="",s="",i,n=!1,o){this.functionalityId=t,this.title=e,this.subtitle=s,this.icon=i,this.option=n,this.toggleOptionCard=o,g.optionCardStyle(),this.element=this.createOptionCard()}createOptionCard(){const t=document.createElement("div");t.className="option-card-eyeeassist",t.id=this.functionalityId+"-card-option-eyeassist";const e=document.createElement("span");e.textContent=this.title,e.style.fontWeight="bold";const s=document.createElement("span");if(s.textContent=this.subtitle,t.appendChild(e),t.appendChild(s),this.icon){this.icon.style.marginTop="30px",this.icon.style.marginBottom="30px";const e=document.createElement("div");e.style.position="absolute",e.style.top="-20px",e.style.right="-20px",e.style.width="70px",e.style.height="70px",e.style.display="flex",e.style.justifyItems="center",e.style.alignContent="center",e.style.justifyContent="center",e.style.alignItems="center",e.style.borderRadius="50%",e.style.background=h.getForegroundColor(),e.append(this.icon),t.appendChild(e)}const i=document.createElement("div");i.style.display="flex",i.style.flexDirection="row";const o=new p(this.functionalityId,"Si",n.LEFT,!!this.option,this.toggleOptionCard),a=new p(this.functionalityId,"No",n.RIGHT,!this.option,this.toggleOptionCard);return o.assignChangeOposiveStateButton(a.toggleState),a.assignChangeOposiveStateButton(o.toggleState),i.appendChild(o.getElement()),i.appendChild(a.getElement()),t.appendChild(i),t}getElement(){return this.element}}!function(t){t[t.RIGHT=0]="RIGHT",t[t.LEFT=1]="LEFT"}(n||(n={})),new class{constructor(t=!1,e=!1,i=!1,n=""){this.token=n,this.animacionEnProgreso=!1,this.initMessageClose=!1,this.viewOptionsOn=!1,this.showOptionsView=()=>{if(this.viewOptionsOn){const t=document.getElementById("overlay-menu-view");return null==t||t.remove(),void(this.viewOptionsOn=!this.viewOptionsOn)}const t=document.createElement("div");t.id="overlay-menu-view",t.className="overlay-menu-view";const e=[{id:"zoom",title:"Activar zoom",subtitle:"Atajo de teclado [Ctrl + Backspace]",status:this.ZoomObject.status(),toggle:()=>{this.ZoomObject.toogleStatus(),localStorage.setItem("zoomStatus",JSON.stringify(this.ZoomObject.status()))},icon:g.zoomIconSvg()},{id:"filter",title:"Aplicar filtros de color",subtitle:"Escoja una opcion",status:this.FilterObject.status(),toggle:(t="")=>{this.FilterObject.toggleStatus();var e=this.FilterObject.showFilterOptionsList();const s=document.getElementById(t);""!=e&&(null==s||s.appendChild(e)),localStorage.setItem("filterStatus",JSON.stringify(this.FilterObject.status()))},icon:g.filterIconSvg()},{id:"voice",title:"Leer en voz alta",subtitle:"Atajo de teclado [Ctrl + Space]",status:this.ScreenReaderObject.status(),toggle:()=>{this.ScreenReaderObject.toggleStatus(),localStorage.setItem("readerStatus",JSON.stringify(this.ScreenReaderObject.status()))},icon:g.voiceIconSvg()}];if(e.forEach((e=>{const s=new m(e.id,e.title,e.subtitle,e.icon,e.status,e.toggle).getElement();t.appendChild(s),console.log("Creado",e.id,e.status)})),document.body.appendChild(t),this.FilterObject.status()){var s=this.FilterObject.showFilterOptionsList();const t=document.getElementById("filter-card-option-eyeassist");console.log(t),""!=s&&(null==t||t.appendChild(s))}this.viewOptionsOn=!this.viewOptionsOn},this.cerrarModal=()=>{if(!this.animacionEnProgreso){const t=document.getElementById("eyeeasist-initial-message");this.animacionEnProgreso=!0;const e=null==t?void 0:t.animate([{opacity:1,transform:"translateY(0)"},{opacity:0,transform:"translateY(-100%)"}],{duration:300,easing:"ease-out"});e&&(e.onfinish=()=>{t&&(t.style.display="none"),this.animacionEnProgreso=!1,localStorage.setItem("initMessageClose","true")})}},"true"==localStorage.getItem("initMessageClose")&&(this.initMessageClose=!0),u.toggleSwitchClasses(),u.addBufferOptionsClass(),u.addFlyMenuStyle(),u.addOptionFunctionsClass(),u.overlayStyleClass(),this.zoomStatus=t,this.filterStatus=e,this.readerStatus=i;const o=localStorage.getItem("zoomStatus");o&&(console.log("Hay zoom status guardado",JSON.parse(o)),this.zoomStatus=JSON.parse(o));const l=localStorage.getItem("filterStatus");l&&(console.log("Hay filter status guardado",JSON.parse(l)),this.filterStatus=JSON.parse(l));const r=localStorage.getItem("readerStatus");r&&(console.log("Hay reader status guardado",JSON.parse(r)),this.readerStatus=JSON.parse(r)),this.ZoomObject=new d(this.zoomStatus),this.FilterObject=new s(this.filterStatus),this.ScreenReaderObject=new a(this.readerStatus,this.token)}start(){this.showInitMessage(),this.showFlyMenu(),document.addEventListener("keydown",(t=>{console.log(t.key),t.preventDefault(),this.ZoomObject.activeZoom(this.ScreenReaderObject.enable(),t),this.ScreenReaderObject.keybindsScreenReader(t)}))}showFlyMenu(){const t=document.createElement("div");t.id="fly_menu",t.className="fly_menu",t.style.bottom="120px",t.appendChild(u.svgEyee()),t.addEventListener("click",this.showOptionsView),document.body.appendChild(t)}showInitMessage(){let t=document.createElement("div");t=u.mainMessage(t),t.id="eyeeasist-initial-message",this.initMessageClose&&(t.style.display="none");let e=document.createElement("div");e=u.messageContent(e);let s=document.createElement("span");s.textContent="Esta p√°gina cuenta con herramientas de accesibilidad. Para activar y/o desactivar estas herramientas, presiona Ctrl + Space o haz clic en el bot√≥n con el icono de una persona posicionado en la parte superior derecha de la pantalla.",s.style.padding="15px";let i=document.createElement("button");i=u.closeButtom(i),i.addEventListener("click",this.cerrarModal),i.appendChild(u.svgCloseButtom(h.getForegroundColor())),e.appendChild(s),t.appendChild(e),t.appendChild(i),document.body.insertBefore(t,document.body.firstChild)}}(!0,!0,!0).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,