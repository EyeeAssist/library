(()=>{"use strict";class e{constructor(){this.hasInsertedAccess=!1,this.active_filter=!1,this.colorBlindnessClasses=["protanopia","protanomaly","deuteranopia","deuteranomaly","tritanopia","tritanomaly","achromatopsia","achromatomaly","grayscale"],this.visionClasses=["vision-loss-moderate","vision-loss-severe","vision-blindness"],this.cssFilter="\n  <style>.protanopia{-webkit-filter:url(#protanopia) grayscale(0)!important;filter:url(#protanopia) grayscale(0)!important}.protanomaly{-webkit-filter:url(#protanomaly) grayscale(0)!important;filter:url(#protanomaly) grayscale(0)!important}.deuteranopia{-webkit-filter:url(#deuteranopia) grayscale(0)!important;filter:url(#deuteranopia) grayscale(0)!important}.deuteranomaly{-webkit-filter:url(#deuteranomaly) grayscale(0)!important;filter:url(#deuteranomaly) grayscale(0)!important}.tritanopia{-webkit-filter:url(#tritanopia) grayscale(0)!important;filter:url(#tritanopia) grayscale(0)!important}.tritanomaly{-webkit-filter:url(#tritanomaly) grayscale(0)!important;filter:url(#tritanomaly) grayscale(0)!important}.achromatopsia{-webkit-filter:url(#achromatopsia) grayscale(0)!important;filter:url(#achromatopsia) grayscale(0)!important}.achromatomaly{-webkit-filter:url(#achromatomaly) grayscale(0)!important;filter:url(#achromatomaly) grayscale(0)!important}.grayscale{-webkit-filter:grayscale(100%)!important;filter:grayscale(100%)!important}.vision-loss-moderate body>*{-webkit-filter:blur(1px)!important;filter:blur(1px)!important}.vision-loss-severe body>*{-webkit-filter:blur(10px)!important;filter:blur(10px)!important}.vision-blindness body>*{background-color:#fff!important;-webkit-filter:brightness(0)!important;filter:brightness(0)!important}#access-filter{border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;width:1px;overflow:hidden;position:absolute!important;word-wrap:normal!important}</style>",this.svgFilterTemplate='<svg \n  id="access-filter"\n  aria-hidden="true"\n  xmlns="http://www.w3.org/2000/svg"\n  version="1.1">\n  <defs>\n    <filter id="protanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.567, 0.433, 0,     0, 0\n                0.558, 0.442, 0,     0, 0\n                0,     0.242, 0.758, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="protanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.817, 0.183, 0,     0, 0\n                0.333, 0.667, 0,     0, 0\n                0,     0.125, 0.875, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="deuteranopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.625, 0.375, 0,   0, 0\n                0.7,   0.3,   0,   0, 0\n                0,     0.3,   0.7, 0, 0\n                0,     0,     0,   1, 0"/>\n    </filter>\n    <filter id="deuteranomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.8,   0.2,   0,     0, 0\n                0.258, 0.742, 0,     0, 0\n                0,     0.142, 0.858, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.95, 0.05,  0,     0, 0\n                0,    0.433, 0.567, 0, 0\n                0,    0.475, 0.525, 0, 0\n                0,    0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.967, 0.033, 0,     0, 0\n                0,     0.733, 0.267, 0, 0\n                0,     0.183, 0.817, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatopsia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.618, 0.320, 0.062, 0, 0\n                0.163, 0.775, 0.062, 0, 0\n                0.163, 0.320, 0.516, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n  </defs>\n</svg>'}aplicarFiltro(e){null!=e?(this.active_filter?this.removeTests("colorBlindness"):this.toggleTest("colorBlindness",e),this.active_filter=!this.active_filter):console.error("Error al aplicar los filtros, la opcion no se pintada correctamente")}toggleTest(e,t){this.hasInsertedAccess||(this.insertFiles(this.svgFilterTemplate,this.cssFilter),this.hasInsertedAccess=!0),this.removeTests(e),document.documentElement.classList.add(t)}insertFiles(e,t){document.body.insertAdjacentHTML("beforeend",e),document.body.insertAdjacentHTML("beforeend",t)}removeTests(e){if("vision"==e)for(let e=0;e<this.visionClasses.length;e++)document.documentElement.classList.remove(this.visionClasses[e]);else if("colorBlindness"==e)for(let e=0;e<this.colorBlindnessClasses.length;e++)document.documentElement.classList.remove(this.colorBlindnessClasses[e])}}class t{static addFilterBufferStyleClass(){const e=document.styleSheets[0];e.insertRule("\n        .filter-list-buffer {\n            position: fixed;\n            top: 50%;\n            right: 20px;\n            transform: translateY(-50%);\n            z-index: 9999;\n            background-color: #FFFF00;\n            color: #000000;\n        }\n    ",e.cssRules.length)}static addFilterOptionsStyleClass(){const e=document.styleSheets[0];e.insertRule("\n        .filter-option {\n          padding: 0.5rem;\n        }\n    ",e.cssRules.length)}static addFilterStyleClass(){const e=document.styleSheets[0];e.insertRule("\n        .filter_button {\n          position: fixed;\n          top: 20px;\n          right: 20px;\n          width: 50px;\n          height: 50px;\n          border-radius: 50%;\n          background-color: #243c5a;\n          color: #ffffff;\n          text-align: center;\n          line-height: 50px;\n          cursor: pointer;\n          z-index: 9999;\n        }\n    ",e.cssRules.length)}}class i{static addZoomMessageTextBoxClass(){const e=document.styleSheets[0];e.insertRule(".zoom-message-txtbox {  \n          display: flex;\n          align-items: center;\n          justify-content: center;\n          position: fixed;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          z-index: 9999;\n          background-color: #FFFF00;\n          color: #000000;\n          font-size: 20rem;\n          text-align: center;\n          width: 80%;\n          height: 80%;\n          font-family: Arial, sans-serif;\n      }",e.cssRules.length)}}class s{constructor(){this.TRANSITION_DURATION=800,this.level=1,this.mouseX=0,this.mouseY=0,this.panEngageTimeout=-1,this.panUpdateInterval=-1,this.callbackTimeout=-1,this.supportsTransforms="WebkitTransform"in document.body.style||"MozTransform"in document.body.style||"msTransform"in document.body.style||"OTransform"in document.body.style||"transform"in document.body.style,this.keyupEvent=e=>{1!==this.level&&27===e.keyCode&&this.out(void 0)},this.mouseMoveEvent=e=>{1!==this.level&&(this.mouseX=e.clientX,this.mouseY=e.clientY)},this.supportsTransforms&&(document.body.style.transition="transform "+this.TRANSITION_DURATION+"ms ease"),document.addEventListener("keyup",this.keyupEvent),document.addEventListener("mousemove",this.mouseMoveEvent)}magnify(e,t){var i=this.getScrollOffset();if(e.width=e.width||1,e.height=e.height||1,e.x-=(window.innerWidth-e.width*t)/2,e.y-=(window.innerHeight-e.height*t)/2,this.supportsTransforms)if(1===t)document.body.style.transform="";else{var s=i.x+"px "+i.y+"px",n="translate("+-e.x+"px,"+-e.y+"px) scale("+t+")";document.body.style.transformOrigin=s,document.body.style.transform=n}else 1===t?(document.body.style.position="",document.body.style.left="",document.body.style.top="",document.body.style.width="",document.body.style.height=""):(document.body.style.position="relative",document.body.style.left=-(i.x+e.x)/t+"px",document.body.style.top=-(i.y+e.y)/t+"px",document.body.style.width=100*t+"%",document.body.style.height=100*t+"%");this.level=t}pan(){var e=.12*window.innerWidth,t=.12*window.innerHeight,i=this.getScrollOffset();this.mouseY<t?window.scroll(i.x,i.y-(1-this.mouseY/t)*(14/this.level)):this.mouseY>window.innerHeight-t&&window.scroll(i.x,i.y+(1-(window.innerHeight-this.mouseY)/t)*(14/this.level)),this.mouseX<e?window.scroll(i.x-(1-this.mouseX/e)*(14/this.level),i.y):this.mouseX>window.innerWidth-e&&window.scroll(i.x+(1-(window.innerWidth-this.mouseX)/e)*(14/this.level),i.y)}getScrollOffset(){return{x:void 0!==window.scrollX?window.scrollX:window.pageXOffset,y:void 0!==window.scrollY?window.scrollY:window.pageYOffset}}to(e){if(1!==this.level)this.out(void 0);else{if(e.x=e.x||0,e.y=e.y||0,e.element){var t="number"==typeof e.padding?e.padding:20,i=e.element.getBoundingClientRect();e.x=i.left-t,e.y=i.top-t,e.width=i.width+2*t,e.height=i.height+2*t}void 0!==e.width&&void 0!==e.height&&(e.scale=Math.max(Math.min(window.innerWidth/e.width,window.innerHeight/e.height),1)),e.scale>1&&(e.x*=e.scale,e.y*=e.scale,e.x=Math.max(e.x,0),e.y=Math.max(e.y,0),this.magnify(e,e.scale),!1!==e.pan&&(this.panEngageTimeout=setTimeout(this.calculatePanUpdateInterval,this.TRANSITION_DURATION)),"function"==typeof e.callback&&(this.callbackTimeout=setTimeout(e.callback,this.TRANSITION_DURATION)))}}calculatePanUpdateInterval(){this.panUpdateInterval=setInterval(this.pan,1e3/60)}out(e){clearTimeout(this.panEngageTimeout),clearInterval(this.panUpdateInterval),clearTimeout(this.callbackTimeout),this.magnify(new n(0,0,1),1),e&&"function"==typeof e.callback&&setTimeout(e.callback,this.TRANSITION_DURATION),this.level=1}}class n{constructor(e,t,i){this.x=0,this.y=0,this.scale=0,this.x=e,this.y=t,this.scale=i}}const o=new class{constructor(e=!1){this.enableZoomOptions=e,this.zoomStatus=!1,this.active_message='<div id="zoom-status" class="zoom-message-txtbox">On</div>',this.deactive_message='<div id="zoom-status" class="zoom-message-txtbox">Off</div>',this.toogleZoom=e=>{this.zoomService.to(new n(e.x,e.y,10))},this.zoomService=new s}activeZoom(e,t){this.enableZoomOptions&&(e||!0!==t.ctrlKey||"backspace"!==t.key.toLowerCase()||(i.addZoomMessageTextBoxClass(),this.initialClickEvent(document.body)))}initialClickEvent(e){this.zoomStatus?this.showBoxMessage(e,this.deactive_message,!this.zoomStatus):this.showBoxMessage(e,this.active_message,!this.zoomStatus),this.zoomStatus=!this.zoomStatus}showBoxMessage(e,t,i){e.insertAdjacentHTML("beforebegin",t),setTimeout((()=>{const e=document.getElementById("zoom-status");null==e||e.remove()}),2e3),i?e.addEventListener("click",this.toogleZoom):e.removeEventListener("click",this.toogleZoom)}}(!0),a=(new class{constructor(i=!1){this.enableFilter=i,this.filterViewOn=!1,this.startFilter=e=>{const t=e.target;this.filterService.aplicarFiltro(t.textContent)},this.showFilterOptionsList=()=>{if(this.filterViewOn){var e=document.getElementById("filter_buffer");return null==e?void console.error("No hay instancia del buffer de opciones."):(e.remove(),void(this.filterViewOn=!this.filterViewOn))}var i=document.createElement("div");i.className="filter-list-buffer",i.id="filter_buffer";var s=document.getElementById("filter_button");null!=s?(s.appendChild(i),t.addFilterBufferStyleClass(),["protanopia","protanomaly","deuteranopia","deuteranomaly","tritanopia","tritanomaly","achromatopsia","achromatomaly","grayscale"].forEach((e=>{var t=document.getElementById("filter_buffer");null!=t?t.appendChild(this.buildFilterOption(e)):console.error("No hay instancia del buffer de opciones.")})),t.addFilterOptionsStyleClass(),this.filterViewOn=!this.filterViewOn):console.error("No se creo el boton correctamente.")},this.filterService=new e,this.showFilterOptions()}showFilterOptions(){const e=document.createElement("img");e.src="https://github.com/EyeeAssist/docs/blob/develop/src/assets/logo.png?raw=true",e.style.width="50px",e.style.borderRadius="50%";const i=document.createElement("div");i.className="filter_button",i.id="filter_button",i.appendChild(e),i.addEventListener("click",this.showFilterOptionsList),t.addFilterStyleClass(),document.body.appendChild(i)}buildFilterOption(e){var t=document.createElement("div");return t.className="filter-option",t.addEventListener("click",this.startFilter),t.textContent=e,t}}(!0),new class{constructor(e=!1){this.useScreenReader=e,this.synth=window.speechSynthesis,this.screenReaderStatus=!1,this.selectedArticle=null,this.selectedLink=null,this.articleIndex=-1,this.linkIndex=0,this.talk=(e,t=!0)=>{console.log("Hablando",e),!t||this.synth.cancel(),this.synth.speak(new SpeechSynthesisUtterance(e))},this.cancelTalk=()=>{this.synth.cancel()},this.useScreenReader}status(){return this.screenReaderStatus}sayWelcome(){this.talk("Hola bienvenido a la pagina X, si desea leer las acciones de la pagina presione control y enter")}sayGoodbay(){this.talk("Gracias por utilizar eyeeassist")}keybindsScreenReader(e){this.cancelReader(e),this.reRead(e),this.activeScreenReader(e),this.moveBetweenContent(e),this.moveBetweenLinks(e)}readChilds(e){var t;if("IMG"==e.nodeName){let t=e;this.talk("Imagen de "+t.alt,!1)}e.nodeType==Node.TEXT_NODE&&(null===(t=e.textContent)||void 0===t?void 0:t.trim())&&this.talk(e.textContent,!1),e.childNodes.forEach((e=>{this.readChilds(e)}))}moveBetweenContent(e){let t=document.getElementsByTagName("article");0!=t.length&&(this.screenReaderStatus&&!0===e.ctrlKey&&"arrowright"===e.key.toLowerCase()&&(this.articleIndex+=1,this.selectedArticle=t[this.articleIndex],console.log("Los hijos de el articulo son"),this.cancelTalk(),this.readChilds(this.selectedArticle),console.log("Hasta aqui llegan los hijos"),this.articleIndex===t.length-1&&(this.articleIndex=0)),this.screenReaderStatus&&!0===e.ctrlKey&&"arrowleft"===e.key.toLowerCase()&&(-1===this.articleIndex?this.articleIndex+=1:0==this.articleIndex?this.articleIndex=t.length-1:this.articleIndex-=1,this.selectedArticle=t[this.articleIndex],null!=this.selectedArticle.textContent&&(this.selectedArticle.focus(),this.talk(this.selectedArticle.textContent))))}activeScreenReader(e){!0===e.ctrlKey&&" "===e.key.toLowerCase()&&(this.screenReaderStatus?this.sayGoodbay():this.sayWelcome(),this.screenReaderStatus=!this.screenReaderStatus)}moveBetweenLinks(e){if(this.screenReaderStatus&&!1===e.ctrlKey&&"enter"===e.key.toLowerCase()&&null!=this.selectedLink&&(console.log(this.selectedLink),this.selectedLink.click()),this.screenReaderStatus&&!0===e.ctrlKey&&"enter"===e.key.toLowerCase()){let e=document.getElementsByClassName("text_reader_link");console.log(e[this.linkIndex].tagName),this.selectedLink=e[this.linkIndex],this.selectedLink.focus(),"TEXTAREA"==e[this.linkIndex].tagName?(this.selectedLink.addEventListener("input",(()=>{console.log(this.selectedLink)})),this.talk("Seleccionado un text area",!0)):null!==this.selectedLink.textContent&&this.talk(this.selectedLink.textContent,!0),this.linkIndex===e.length-1?this.linkIndex=0:this.linkIndex+=1}}cancelReader(e){"escape"===e.key.toLowerCase()&&this.talk("")}reRead(e){!0===e.ctrlKey&&"backspace"===e.key.toLowerCase()&&null!=this.selectedArticle&&null!=this.selectedArticle.textContent&&this.talk(this.selectedArticle.textContent)}}(!0));document.addEventListener("keydown",(e=>{console.log(e.key),o.activeZoom(a.status(),e),a.keybindsScreenReader(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,