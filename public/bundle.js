(()=>{"use strict";class t{constructor(){this.hasInsertedAccess=!1,this.active_filter=!1,this.colorBlindnessClasses=["protanopia","protanomaly","deuteranopia","deuteranomaly","tritanopia","tritanomaly","achromatopsia","achromatomaly","grayscale"],this.visionClasses=["vision-loss-moderate","vision-loss-severe","vision-blindness"],this.cssFilter="\n  <style>.protanopia{-webkit-filter:url(#protanopia) grayscale(0)!important;filter:url(#protanopia) grayscale(0)!important}.protanomaly{-webkit-filter:url(#protanomaly) grayscale(0)!important;filter:url(#protanomaly) grayscale(0)!important}.deuteranopia{-webkit-filter:url(#deuteranopia) grayscale(0)!important;filter:url(#deuteranopia) grayscale(0)!important}.deuteranomaly{-webkit-filter:url(#deuteranomaly) grayscale(0)!important;filter:url(#deuteranomaly) grayscale(0)!important}.tritanopia{-webkit-filter:url(#tritanopia) grayscale(0)!important;filter:url(#tritanopia) grayscale(0)!important}.tritanomaly{-webkit-filter:url(#tritanomaly) grayscale(0)!important;filter:url(#tritanomaly) grayscale(0)!important}.achromatopsia{-webkit-filter:url(#achromatopsia) grayscale(0)!important;filter:url(#achromatopsia) grayscale(0)!important}.achromatomaly{-webkit-filter:url(#achromatomaly) grayscale(0)!important;filter:url(#achromatomaly) grayscale(0)!important}.grayscale{-webkit-filter:grayscale(100%)!important;filter:grayscale(100%)!important}.vision-loss-moderate body>*{-webkit-filter:blur(1px)!important;filter:blur(1px)!important}.vision-loss-severe body>*{-webkit-filter:blur(10px)!important;filter:blur(10px)!important}.vision-blindness body>*{background-color:#fff!important;-webkit-filter:brightness(0)!important;filter:brightness(0)!important}#access-filter{border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;width:1px;overflow:hidden;position:absolute!important;word-wrap:normal!important}</style>",this.svgFilterTemplate='<svg \n  id="access-filter"\n  aria-hidden="true"\n  xmlns="http://www.w3.org/2000/svg"\n  version="1.1">\n  <defs>\n    <filter id="protanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.567, 0.433, 0,     0, 0\n                0.558, 0.442, 0,     0, 0\n                0,     0.242, 0.758, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="protanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.817, 0.183, 0,     0, 0\n                0.333, 0.667, 0,     0, 0\n                0,     0.125, 0.875, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="deuteranopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.625, 0.375, 0,   0, 0\n                0.7,   0.3,   0,   0, 0\n                0,     0.3,   0.7, 0, 0\n                0,     0,     0,   1, 0"/>\n    </filter>\n    <filter id="deuteranomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.8,   0.2,   0,     0, 0\n                0.258, 0.742, 0,     0, 0\n                0,     0.142, 0.858, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.95, 0.05,  0,     0, 0\n                0,    0.433, 0.567, 0, 0\n                0,    0.475, 0.525, 0, 0\n                0,    0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.967, 0.033, 0,     0, 0\n                0,     0.733, 0.267, 0, 0\n                0,     0.183, 0.817, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatopsia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.618, 0.320, 0.062, 0, 0\n                0.163, 0.775, 0.062, 0, 0\n                0.163, 0.320, 0.516, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n  </defs>\n</svg>'}aplicarFiltro(t){null!=t?(this.active_filter?this.removeTests("colorBlindness"):this.toggleTest("colorBlindness",t),this.active_filter=!this.active_filter):console.error("Error al aplicar los filtros, la opcion no se pintada correctamente")}toggleTest(t,e){this.hasInsertedAccess||(this.insertFiles(this.svgFilterTemplate,this.cssFilter),this.hasInsertedAccess=!0),this.removeTests(t),document.documentElement.classList.add(e)}insertFiles(t,e){document.body.insertAdjacentHTML("beforeend",t),document.body.insertAdjacentHTML("beforeend",e)}removeTests(t){if("vision"==t)for(let t=0;t<this.visionClasses.length;t++)document.documentElement.classList.remove(this.visionClasses[t]);else if("colorBlindness"==t)for(let t=0;t<this.colorBlindnessClasses.length;t++)document.documentElement.classList.remove(this.colorBlindnessClasses[t])}}class e{static addFilterBufferStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .filter-list-buffer {\n          margin-top: 15px;\n          display: flex;\n          flex-wrap: wrap;\n          flex-direction: column;\n          width: 100%;\n        }\n    ",t.cssRules.length)}static addFilterOptionsStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .filter-option {\n          padding: 0.5rem;\n        }\n    ",t.cssRules.length)}static addFilterStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .filter_button {\n          position: fixed;\n          top: 20px;\n          right: 20px;\n          width: 50px;\n          height: 50px;\n          border-radius: 50%;\n          background-color: #243c5a;\n          color: #ffffff;\n          text-align: center;\n          line-height: 50px;\n          cursor: pointer;\n          z-index: 9999;\n        }\n    ",t.cssRules.length)}}class s{constructor(s=!1){this.enableFilter=s,this.filterViewOn=!1,this.startFilter=t=>{var e,s=null===(e=t.target.textContent)||void 0===e?void 0:e.toLowerCase();console.log(s),this.filterService.aplicarFiltro(s)},this.showFilterOptionsList=()=>{if(!this.enableFilter){var t=document.getElementById("filter_buffer");return null==t?void console.error("No hay instancia del buffer de opciones."):(t.remove(),"")}var e=document.createElement("div");e.className="filter-list-buffer",e.id="filter_buffer";var s=document.createElement("span");s.textContent="Seleccione un filtro para distinguir mejor los siguientes colores:",s.style.marginBottom="5px",e.appendChild(s),[{id:"protanopia",name:"Protanopia"},{id:"deuteranopia",name:"Deuteranopia"},{id:"tritanopia",name:"Tritanopia"},{id:"grayscale",name:"Grayscale"}].forEach((t=>{e.appendChild(this.buildFilterOption(t))}));var i=document.createElement("div");return i.style.display="flex",i.style.flexDirection="row",i.style.alignContent="center",i.style.alignItems="center",i.style.justifyItems="center",i.style.justifyContent="center",["#FFFF00","#FF0000","#FFA500","#FFFF00","#008000","#0000FF","#4B0082","#9400D3","#FFFF00"].forEach((t=>{var e=document.createElement("div");e.style.display="block",e.style.width="20px",e.style.height="25px",e.style.backgroundColor=t,i.appendChild(e)})),e.appendChild(i),e},this.filterService=new t,e.addFilterBufferStyleClass(),e.addFilterOptionsStyleClass()}status(){return this.enableFilter}toggleStatus(){this.enableFilter=!this.enableFilter}showFilterOptions(){const t=document.createElement("img");t.src="https://github.com/EyeeAssist/docs/blob/develop/src/assets/logo.png?raw=true",t.style.width="50px",t.style.borderRadius="50%";const s=document.createElement("div");s.className="filter_button",s.id="filter_button",s.appendChild(t),s.addEventListener("click",this.showFilterOptionsList),e.addFilterStyleClass(),document.body.appendChild(s)}buildFilterOption(t){var e=document.createElement("div");e.className="filter-option",e.style.display="flex",e.id=t.id+"_option",e.addEventListener("click",this.startFilter);const s=document.createElement("div"),i=document.createElement("input");i.type="radio",i.style.margin="0",s.style.marginLeft="6px";const n=document.createElement("span");return n.textContent=t.name,n.style.marginLeft="12px",s.append(i),e.append(s),e.append(n),e}}class i{constructor(t=!1,e){this.foundVideo=t,this.talk=e,this.onPlayerStateChange=t=>{t.data===YT.PlayerState.PAUSED&&clearInterval(this.interval),t.data==YT.PlayerState.ENDED&&clearInterval(this.interval),t.data===YT.PlayerState.PLAYING&&(this.interval=setInterval((()=>{var t,e,s;const i=null===(t=this.player)||void 0===t?void 0:t.getCurrentTime(),n=null==i?void 0:i.toFixed(1);(null===(e=this.script)||void 0===e?void 0:e.get(n))&&this.talk(null===(s=this.script)||void 0===s?void 0:s.get(n))}),100))}}toggleStatus(){this.foundVideo=!this.foundVideo}turnOff(){this.foundVideo=!1}startAudioDescription(t){var e,s,i;this.foundVideo&&!0===t.shiftKey&&"k"===t.key.toLowerCase()&&((null===(e=this.player)||void 0===e?void 0:e.getPlayerState())==YT.PlayerState.PLAYING?null===(s=this.player)||void 0===s||s.pauseVideo():null===(i=this.player)||void 0===i||i.playVideo())}createPlayer(t){let e=t;e.id="single-video-eyeeassit",this.script=this.getScript(e.src);const s=e.src.indexOf("?");e.src=e.src.substring(0,s+1)+"enablejsapi=1&"+e.src.substring(s+1),this.player=new YT.Player(e.id,{events:{onStateChange:this.onPlayerStateChange}})}getScript(t){const e=new Map;return e.set("1.0","Paisaje de una playa"),e.set("13.0","Paisaje de unas mota√±as y una bandera ondeando"),e.set("28.0","Paisaje con una costa y olas rompiendo"),e.set("40.0","Una laguna artificial"),e.set("56.0","Un rio largo"),e}}var n,o=function(t,e,s,i){return new(s||(s=Promise))((function(n,o){function a(t){try{r(i.next(t))}catch(t){o(t)}}function l(t){try{r(i.throw(t))}catch(t){o(t)}}function r(t){var e;t.done?n(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(a,l)}r((i=i.apply(t,e||[])).next())}))};class a{constructor(t=!1,e=""){var s;if(this.useScreenReader=t,this.token=e,this.synth=window.speechSynthesis,this.screenReaderStatus=!1,this.selectedArticle=null,this.selectedLink=null,this.articleIndex=-1,this.linkIndex=0,this.controller=new AbortController,this.videoProcesor=null,this.tags=[],this.talk=(t,e=!0)=>{!e||this.synth.cancel(),this.synth.speak(new SpeechSynthesisUtterance(t))},this.cancelTalk=()=>{this.controller&&this.controller.abort(),this.talk("")},!this.useScreenReader)return;let n=document.createElement("script");n.src="https://www.youtube.com/iframe_api";let o=document.getElementsByTagName("script")[0];null===(s=o.parentNode)||void 0===s||s.insertBefore(n,o),this.videoProcesor=new i(!1,this.talk)}status(){return this.useScreenReader}toggleStatus(){this.useScreenReader=!this.useScreenReader}enable(){return this.screenReaderStatus}sayWelcome(){this.talk("Hola bienvenido a la pagina X, si desea leer las acciones de la pagina presione control y enter")}sayGoodbay(){this.talk("Gracias por utilizar eyeeassist")}keybindsScreenReader(t){var e;this.cancelReader(t),this.reRead(t),this.activeScreenReader(t),this.moveBetweenContent(t),this.moveBetweenLinks(t),null===(e=this.videoProcesor)||void 0===e||e.startAudioDescription(t)}getImage(t){return o(this,void 0,void 0,(function*(){return yield fetch(t)}))}getDescription(t){return o(this,void 0,void 0,(function*(){this.controller=new AbortController;const e=new FormData;e.append("file",t,"imagen.jpg");const s={method:"POST",body:e,headers:{Authorization:"Bearer "+this.token},signal:this.controller.signal},i=yield fetch("http://localhost:8000/caption",s).catch((t=>{"AbortError"===t.name&&console.error(t)}));return null!=i?(yield i.json()).message[0]:""}))}readChilds(t){var e,s,i;return o(this,void 0,void 0,(function*(){if("IFRAME"==t.nodeName&&(this.talk("Video encontrado, precione shift mas k para iniciar el video con audio descripcion"),null===(e=this.videoProcesor)||void 0===e||e.toggleStatus(),null===(s=this.videoProcesor)||void 0===s||s.createPlayer(t)),"IMG"==t.nodeName){this.talk("Imagen encontrada",!1);let e=t;if(""!=e.alt)this.talk(""),this.talk("Imagen de "+e.alt,!1);else{const t=yield this.getImage(e.src),s=yield t.blob();this.talk("describiendo imagen",!1);const i=yield this.getDescription(s);""!=i?this.talk("Imagen de "+i,!1):this.talk("No se pudo generar una descripcion para la imagen encontrada.",!1)}}t.nodeType==Node.TEXT_NODE&&(null===(i=t.textContent)||void 0===i?void 0:i.trim())&&this.talk(t.textContent,!1);for(const e of Array.from(t.childNodes))yield this.readChilds(e)}))}moveBetweenContent(t){if(0!=this.tags.length){if(this.screenReaderStatus&&!0===t.ctrlKey&&"arrowright"===t.key.toLowerCase()){let t=this.tags.shift();this.tags.push(t),this.cancelTalk(),this.readChilds(t)}if(this.screenReaderStatus&&!0===t.ctrlKey&&"arrowleft"===t.key.toLowerCase()){let t=this.tags.pop();this.tags.unshift(t),this.cancelTalk(),this.readChilds(t)}}}activeScreenReader(t){this.useScreenReader&&!0===t.ctrlKey&&" "===t.key.toLowerCase()&&(this.screenReaderStatus?(this.tags=[],this.sayGoodbay()):(this.tags=this.convertToHtmlElementsArray(document.getElementsByTagName("article")),this.sayWelcome()),this.screenReaderStatus=!this.screenReaderStatus)}moveBetweenLinks(t){if(this.screenReaderStatus&&!1===t.ctrlKey&&"enter"===t.key.toLowerCase()&&null!=this.selectedLink&&(console.log(this.selectedLink),this.selectedLink.click()),this.screenReaderStatus&&!0===t.ctrlKey&&"enter"===t.key.toLowerCase()){let t=document.getElementsByClassName("text_reader_link");console.log(t[this.linkIndex].tagName),this.selectedLink=t[this.linkIndex],this.selectedLink.focus(),"TEXTAREA"==t[this.linkIndex].tagName?(this.selectedLink.addEventListener("input",(()=>{console.log(this.selectedLink)})),this.talk("Seleccionado un text area",!0)):null!==this.selectedLink.textContent&&this.talk(this.selectedLink.textContent,!0),this.linkIndex===t.length-1?this.linkIndex=0:this.linkIndex+=1}}cancelReader(t){this.useScreenReader&&"escape"===t.key.toLowerCase()&&this.talk("")}reRead(t){this.useScreenReader&&!0===t.ctrlKey&&"backspace"===t.key.toLowerCase()&&null!=this.selectedArticle&&null!=this.selectedArticle.textContent&&this.talk(this.selectedArticle.textContent)}convertToHtmlElementsArray(t){let e=[];for(const s of t)e.push(s);return e}}class l{static addZoomMessageTextBoxClass(){const t=document.styleSheets[0];t.insertRule(".zoom-message-txtbox {  \n          display: flex;\n          align-items: center;\n          justify-content: center;\n          position: fixed;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          z-index: 9999;\n          background-color: #FFFF00;\n          color: #000000;\n          font-size: 20rem;\n          text-align: center;\n          width: 80%;\n          height: 80%;\n          font-family: Arial, sans-serif;\n      }",t.cssRules.length)}}class r{constructor(){this.TRANSITION_DURATION=800,this.level=1,this.mouseX=0,this.mouseY=0,this.panEngageTimeout=-1,this.panUpdateInterval=-1,this.callbackTimeout=-1,this.supportsTransforms="WebkitTransform"in document.body.style||"MozTransform"in document.body.style||"msTransform"in document.body.style||"OTransform"in document.body.style||"transform"in document.body.style,this.keyupEvent=t=>{1!==this.level&&27===t.keyCode&&this.out(void 0)},this.mouseMoveEvent=t=>{1!==this.level&&(this.mouseX=t.clientX,this.mouseY=t.clientY)},this.supportsTransforms&&(document.body.style.transition="transform "+this.TRANSITION_DURATION+"ms ease"),document.addEventListener("keyup",this.keyupEvent),document.addEventListener("mousemove",this.mouseMoveEvent)}magnify(t,e){var s=this.getScrollOffset();if(t.width=t.width||1,t.height=t.height||1,t.x-=(window.innerWidth-t.width*e)/2,t.y-=(window.innerHeight-t.height*e)/2,this.supportsTransforms)if(1===e)document.body.style.transform="";else{var i=s.x+"px "+s.y+"px",n="translate("+-t.x+"px,"+-t.y+"px) scale("+e+")";document.body.style.transformOrigin=i,document.body.style.transform=n}else 1===e?(document.body.style.position="",document.body.style.left="",document.body.style.top="",document.body.style.width="",document.body.style.height=""):(document.body.style.position="relative",document.body.style.left=-(s.x+t.x)/e+"px",document.body.style.top=-(s.y+t.y)/e+"px",document.body.style.width=100*e+"%",document.body.style.height=100*e+"%");this.level=e}pan(){var t=.12*window.innerWidth,e=.12*window.innerHeight,s=this.getScrollOffset();this.mouseY<e?window.scroll(s.x,s.y-(1-this.mouseY/e)*(14/this.level)):this.mouseY>window.innerHeight-e&&window.scroll(s.x,s.y+(1-(window.innerHeight-this.mouseY)/e)*(14/this.level)),this.mouseX<t?window.scroll(s.x-(1-this.mouseX/t)*(14/this.level),s.y):this.mouseX>window.innerWidth-t&&window.scroll(s.x+(1-(window.innerWidth-this.mouseX)/t)*(14/this.level),s.y)}getScrollOffset(){return{x:void 0!==window.scrollX?window.scrollX:window.pageXOffset,y:void 0!==window.scrollY?window.scrollY:window.pageYOffset}}to(t){if(1!==this.level)this.out(void 0);else{if(t.x=t.x||0,t.y=t.y||0,t.element){var e="number"==typeof t.padding?t.padding:20,s=t.element.getBoundingClientRect();t.x=s.left-e,t.y=s.top-e,t.width=s.width+2*e,t.height=s.height+2*e}void 0!==t.width&&void 0!==t.height&&(t.scale=Math.max(Math.min(window.innerWidth/t.width,window.innerHeight/t.height),1)),t.scale>1&&(t.x*=t.scale,t.y*=t.scale,t.x=Math.max(t.x,0),t.y=Math.max(t.y,0),this.magnify(t,t.scale),!1!==t.pan&&(this.panEngageTimeout=setTimeout(this.calculatePanUpdateInterval,this.TRANSITION_DURATION)),"function"==typeof t.callback&&(this.callbackTimeout=setTimeout(t.callback,this.TRANSITION_DURATION)))}}calculatePanUpdateInterval(){this.panUpdateInterval=setInterval(this.pan,1e3/60)}out(t){clearTimeout(this.panEngageTimeout),clearInterval(this.panUpdateInterval),clearTimeout(this.callbackTimeout),this.magnify(new c(0,0,1),1),t&&"function"==typeof t.callback&&setTimeout(t.callback,this.TRANSITION_DURATION),this.level=1}}class c{constructor(t,e,s){this.x=0,this.y=0,this.scale=0,this.x=t,this.y=e,this.scale=s}}class d{constructor(t=!1){this.enableZoomOptions=t,this.zoomStatus=!1,this.active_message='<div id="zoom-status" class="zoom-message-txtbox">On</div>',this.deactive_message='<div id="zoom-status" class="zoom-message-txtbox">Off</div>',this.toogleZoom=t=>{this.zoomService.to(new c(t.x,t.y,10))},this.zoomService=new r}status(){return this.enableZoomOptions}toogleStatus(){this.enableZoomOptions=!this.enableZoomOptions}activeZoom(t,e){this.enableZoomOptions&&(t||!0!==e.ctrlKey||"backspace"!==e.key.toLowerCase()||(l.addZoomMessageTextBoxClass(),this.initialClickEvent(document.body)))}initialClickEvent(t){this.zoomStatus?this.showBoxMessage(t,this.deactive_message,!this.zoomStatus):this.showBoxMessage(t,this.active_message,!this.zoomStatus),this.zoomStatus=!this.zoomStatus}showBoxMessage(t,e,s){t.insertAdjacentHTML("beforebegin",e),setTimeout((()=>{const t=document.getElementById("zoom-status");null==t||t.remove()}),2e3),s?t.addEventListener("click",this.toogleZoom):t.removeEventListener("click",this.toogleZoom)}}class h{static mainMessage(t){return t.style.display="flex",t.style.alignItems="center",t.style.alignContent="center",t.style.justifyItems="center",t.style.justifyContent="center",t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.backgroundColor="#F5F5DC",t.style.zIndex="999",t.style.color="#006400",t}static messageContent(t){return t.style.textAlign="center",t.style.flex="1",t.style.display="flex",t.style.alignContent="center",t.style.justifyContent="center",t}static closeButtom(t){return t.style.background="none",t.style.border="none",t.style.padding="0",t.style.margin="0",t.style.cursor="pointer",t.style.width="50px",t.style.height="50px",t.style.alignSelf="flex-end",t.style.color="#006400",t}static addFlyMenuStyle(){const t=document.styleSheets[0];t.insertRule("\n        .fly_menu {\n          position: fixed;\n          right: 70px;\n          width: 72px;\n          height: 72px;\n          border-radius: 50%;\n          background-color: #F5F5DC;\n          color: #006400;\n          text-align: center;\n          line-height: 50px;\n          flex-wrap: wrap;\n          cursor: pointer;\n          display: flex;\n          align-content: center;\n          justify-content: center;\n          z-index: 9999;\n        }\n    ",t.cssRules.length)}static svgHuman(t,e="34",s="38"){const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttribute("width",e),i.setAttribute("height",s),i.setAttribute("viewBox","0 0 34 38"),i.setAttribute("xmlns","http://www.w3.org/2000/svg");const n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d","M33.5 13.5H22.5V37.3333H18.8333V26.3333H15.1667V37.3333H11.5V13.5H0.5V9.83332H33.5M17 0.666656C17.9725 0.666656 18.9051 1.05296 19.5927 1.7406C20.2804 2.42823 20.6667 3.36086 20.6667 4.33332C20.6667 5.30578 20.2804 6.23841 19.5927 6.92605C18.9051 7.61368 17.9725 7.99999 17 7.99999C16.0275 7.99999 15.0949 7.61368 14.4073 6.92605C13.7196 6.23841 13.3333 5.30578 13.3333 4.33332C13.3333 2.29832 14.965 0.666656 17 0.666656Z"),n.setAttribute("fill",t),i.appendChild(n),i}static svgCloseButtom(t){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.setAttribute("fill",t),e.setAttribute("viewBox","0 0 32 32");const s=document.createElementNS("http://www.w3.org/2000/svg","path");return s.setAttribute("d","M7.004 23.087l7.08-7.081-7.07-7.071L8.929 7.02l7.067 7.069L23.084 7l1.912 1.913-7.089 7.093 7.075 7.077-1.912 1.913-7.074-7.073L8.917 25z"),e.appendChild(s),e}static addBufferOptionsClass(){const t=document.styleSheets[0];t.insertRule("\n        .buffer_options {\n            position: fixed;\n            top: 130px;\n            right: 70px;\n            border-radius: 10px;\n            height: auto; \n            max-height: 100%;\n            overflow-y: auto; \n            z-index: 9999;\n            background-color: #F5F5DC;\n            color: #006400;\n        }\n    ",t.cssRules.length)}static toggleSwitchClasses(){this.toogleSwitchClass(),this.toggleSwitchCircle(),this.toggleSwitchActive(),this.toggleSwitchAnimation()}static toogleSwitchClass(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch {\n            width: 60px;\n            height: 30px;\n            background-color: #ccc;\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            cursor: pointer;\n            transition: background-color 0.3s, transform 0.3s;\n        }\n    ",t.cssRules.length)}static toggleSwitchCircle(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch-circle {\n            width: 30px;\n            height: 30px;\n            background-color: white;\n            border-radius: 50%;\n            transition: transform 0.3s;\n        }",t.cssRules.length)}static toggleSwitchActive(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch.active {\n            background-color: #2ecc71;\n        }",t.cssRules.length)}static toggleSwitchAnimation(){const t=document.styleSheets[0];t.insertRule("\n        .toggle-switch.active .toggle-switch-circle {\n            transform: translateX(30px);\n        }",t.cssRules.length)}static addOptionFunctionsClass(){const t=document.styleSheets[0];t.insertRule("\n        .option_menu_eyeeassist {\n          display: flex;\n          padding: 10px;\n          justify-content: space-between;\n        }",t.cssRules.length)}static overlayStyleClass(){const t=document.styleSheets[0];t.insertRule("\n        .overlay-menu-view {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n            background-color: rgba(0, 0, 0, 0.5);\n        }",t.cssRules.length)}}class u{constructor(t,e,s,i=!1,o){this.functionalityId=t,this.text=e,this.position=s,this.active=i,this.toggleToolStatus=o,this.toggleOposiveButton=null,this.toggleState=()=>{this.active=!this.active},this.changeButtonState=()=>{const t=document.getElementById(this.functionalityId+"-button-eyeassist-"+this.text);if(!1===this.active){if(null!=t&&(t.style.backgroundColor="#004D00",t.style.color="#FFFFFF"),this.position==n.LEFT){const t=document.getElementById(this.functionalityId+"-button-eyeassist-No");null!=t&&(t.style.backgroundColor="#F5F5DC",t.style.color="#004D00")}else{const t=document.getElementById(this.functionalityId+"-button-eyeassist-Si");null!=t&&(t.style.backgroundColor="#F5F5DC",t.style.color="#004D00")}this.toggleToolStatus(this.functionalityId+"-card-option-eyeassist"),this.active=!this.active,this.toggleOposiveButton&&this.toggleOposiveButton()}},this.element=this.createButtom()}createButtom(){const t=document.createElement("div");t.id=this.functionalityId+"-button-eyeassist-"+this.text,t.addEventListener("click",this.changeButtonState),t.style.width="100px",t.style.cursor="pointer",this.position==n.LEFT?t.style.borderRadius="50px 0 0 50px":t.style.borderRadius="0 50px 50px 0",t.style.border="1px solid #004D00",t.style.padding="10px",t.style.display="flex",t.style.alignContent="center",t.style.alignItems="center",t.style.justifyContent="center",t.style.justifyItems="center",this.active&&(t.style.backgroundColor="#004D00",t.style.color="#FFFFFF");const e=document.createElement("span");return e.textContent=this.text,e.style.cursor="pointer",t.appendChild(e),t}assignChangeOposiveStateButton(t){this.toggleOposiveButton=t}getElement(){return this.element}}class p{static zoomIconSvg(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("width","108"),t.setAttribute("height","108"),t.setAttribute("viewBox","0 0 108 108"),t.setAttribute("fill","none");const e=document.createElementNS("http://www.w3.org/2000/svg","path");e.setAttribute("opacity","0.16"),e.setAttribute("d","M85.4996 49.4995C85.4996 59.0472 81.7068 68.204 74.9555 74.9553C68.2042 81.7066 59.0474 85.4995 49.4996 85.4995C39.9518 85.4995 30.7951 81.7066 24.0438 74.9553C17.2925 68.204 13.4996 59.0472 13.4996 49.4995C13.4996 39.9517 17.2925 30.7949 24.0438 24.0436C30.7951 17.2923 39.9518 13.4995 49.4996 13.4995C59.0474 13.4995 68.2042 17.2923 74.9555 24.0436C81.7068 30.7949 85.4996 39.9517 85.4996 49.4995Z"),e.setAttribute("fill","#004D00");const s=document.createElementNS("http://www.w3.org/2000/svg","path");return s.setAttribute("d","M94.5001 94.5L74.9566 74.9565M74.9566 74.9565C78.2996 71.6135 80.9514 67.6448 82.7606 63.277C84.5698 58.9091 85.501 54.2277 85.501 49.5C85.501 44.7723 84.5698 40.0909 82.7606 35.7231C80.9514 31.3552 78.2996 27.3865 74.9566 24.0435C71.6136 20.7005 67.6449 18.0487 63.277 16.2395C58.9092 14.4303 54.2278 13.4991 49.5001 13.4991C44.7724 13.4991 40.0909 14.4303 35.7231 16.2395C31.3553 18.0487 27.3866 20.7005 24.0436 24.0435C17.2921 30.795 13.4991 39.952 13.4991 49.5C13.4991 59.0481 17.2921 68.205 24.0436 74.9565C30.7951 81.708 39.952 85.5009 49.5001 85.5009C59.0481 85.5009 68.2051 81.708 74.9566 74.9565ZM49.5001 36V63M36.0001 49.5H63.0001"),s.setAttribute("stroke","#004D00"),s.setAttribute("stroke-width","9.01408"),s.setAttribute("stroke-linecap","round"),s.setAttribute("stroke-linejoin","round"),t.appendChild(e),t.appendChild(s),t}static filterIconSvg(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("width","108"),t.setAttribute("height","108"),t.setAttribute("viewBox","0 0 108 108"),t.setAttribute("fill","none");const e=document.createElementNS("http://www.w3.org/2000/svg","path");e.setAttribute("d","M54 91.9801C58.9451 96.4092 65.3568 98.8547 72 98.8453C86.9107 98.8453 99 86.775 99 71.8875C99 59.3274 90.396 48.7712 78.75 45.7789"),e.setAttribute("stroke","#004D00"),e.setAttribute("stroke-width","9.01408"),e.setAttribute("stroke-linejoin","round");const s=document.createElementNS("http://www.w3.org/2000/svg","path");s.setAttribute("d","M29.25 45.7789C17.604 48.7712 9 59.3252 9 71.8875C9 86.775 21.0893 98.8453 36 98.8453C50.9107 98.8453 63 86.775 63 71.8875C63 68.4055 62.3385 65.0807 61.137 62.0254"),s.setAttribute("stroke","#004D00"),s.setAttribute("stroke-width","9.01408"),s.setAttribute("stroke-linejoin","round");const i=document.createElementNS("http://www.w3.org/2000/svg","path");return i.setAttribute("d","M54 62.9016C68.9108 62.9016 81 50.8312 81 35.9438C81 21.0563 68.9108 8.98596 54 8.98596C39.0893 8.98596 27 21.0563 27 35.9438C27 50.8312 39.0893 62.9016 54 62.9016Z"),i.setAttribute("fill","#a3bd93"),i.setAttribute("stroke","#004D00"),i.setAttribute("stroke-width","9.01408"),i.setAttribute("stroke-linejoin","round"),t.appendChild(e),t.appendChild(s),t.appendChild(i),t}static voiceIconSvg(){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("width","108"),t.setAttribute("height","108"),t.setAttribute("viewBox","0 0 108 108"),t.setAttribute("fill","none");const e=document.createElementNS("http://www.w3.org/2000/svg","path");e.setAttribute("d","M54.0001 99C78.8536 99 99.0001 78.8535 99.0001 54C99.0001 29.1465 78.8536 9 54.0001 9C29.1466 9 9.00006 29.1465 9.00006 54C9.00006 78.8535 29.1466 99 54.0001 99Z"),e.setAttribute("fill","#a3bd93"),e.setAttribute("stroke","#004D00"),e.setAttribute("stroke-width","9.01408"),e.setAttribute("stroke-linejoin","round");const s=document.createElementNS("http://www.w3.org/2000/svg","path");s.setAttribute("d","M38.2501 58.275C39.4435 58.275 40.5881 57.8009 41.432 56.957C42.276 56.1131 42.7501 54.9685 42.7501 53.775C42.7501 52.5816 42.276 51.437 41.432 50.593C40.5881 49.7491 39.4435 49.275 38.2501 49.275C37.0566 49.275 35.912 49.7491 35.0681 50.593C34.2242 51.437 33.7501 52.5816 33.7501 53.775C33.7501 54.9685 34.2242 56.1131 35.0681 56.957C35.912 57.8009 37.0566 58.275 38.2501 58.275Z"),s.setAttribute("fill","#004D00");const i=document.createElementNS("http://www.w3.org/2000/svg","path");return i.setAttribute("d","M49.3874 64.9125C50.8521 63.4515 52.0136 61.7154 52.8052 59.8041C53.5967 57.8927 54.0028 55.8438 53.9999 53.775C54.0028 51.7062 53.5967 49.6573 52.8052 47.7459C52.0136 45.8346 50.8521 44.0985 49.3874 42.6375M60.5249 76.0478C63.4543 73.1257 65.7773 69.6536 67.3604 65.8309C68.9436 62.0082 69.7556 57.9103 69.7499 53.7728C69.7499 45.0743 66.2242 37.1993 60.5249 31.5"),i.setAttribute("stroke","#004D00"),i.setAttribute("stroke-width","9.01408"),i.setAttribute("stroke-linecap","round"),i.setAttribute("stroke-linejoin","round"),t.appendChild(e),t.appendChild(s),t.appendChild(i),t}static optionCardStyle(){const t=document.styleSheets[0];t.insertRule("\n        .option-card-eyeeassist {\n          display: flex;\n          flex-direction: column;\n          align-content: center;\n          align-items: center;\n          justify-content: center;\n          justify-items: center;\n          background-color: #F5F5DC;\n          width: 30%;\n          padding: 50px;\n          border-radius: 50px;\n          color: #004D00;\n        }\n    ",t.cssRules.length)}}class m{constructor(t,e="",s="",i,n=!1,o){this.functionalityId=t,this.title=e,this.subtitle=s,this.icon=i,this.option=n,this.toggleOptionCard=o,p.optionCardStyle(),this.element=this.createOptionCard()}createOptionCard(){const t=document.createElement("div");t.className="option-card-eyeeassist",t.id=this.functionalityId+"-card-option-eyeassist";const e=document.createElement("span");e.textContent=this.title,e.style.fontWeight="bold";const s=document.createElement("span");s.textContent=this.subtitle,t.appendChild(e),t.appendChild(s),this.icon&&(this.icon.style.marginTop="30px",this.icon.style.marginBottom="30px",t.appendChild(this.icon));const i=document.createElement("div");i.style.display="flex",i.style.flexDirection="row";const o=new u(this.functionalityId,"Si",n.LEFT,!!this.option,this.toggleOptionCard),a=new u(this.functionalityId,"No",n.RIGHT,!this.option,this.toggleOptionCard);return o.assignChangeOposiveStateButton(a.toggleState),a.assignChangeOposiveStateButton(o.toggleState),i.appendChild(o.getElement()),i.appendChild(a.getElement()),t.appendChild(i),t}getElement(){return this.element}}!function(t){t[t.RIGHT=0]="RIGHT",t[t.LEFT=1]="LEFT"}(n||(n={})),new class{constructor(t=!1,e=!1,i=!1,n=""){this.token=n,this.animacionEnProgreso=!1,this.initMessageClose=!1,this.viewOptionsOn=!1,this.showOptionsView=()=>{if(this.viewOptionsOn){const t=document.getElementById("overlay-menu-view");return null==t||t.remove(),void(this.viewOptionsOn=!this.viewOptionsOn)}const t=document.createElement("div");t.id="overlay-menu-view",t.className="overlay-menu-view";const e=[{id:"zoom",title:"Activar zoom",subtitle:"Atajo de teclado [Ctrl + Backspace]",status:this.ZoomObject.status(),toggle:()=>{this.ZoomObject.toogleStatus(),localStorage.setItem("zoomStatus",JSON.stringify(this.ZoomObject.status()))},icon:p.zoomIconSvg()},{id:"filter",title:"Aplicar filtros de color",subtitle:"",status:this.FilterObject.status(),toggle:(t="")=>{this.FilterObject.toggleStatus();var e=this.FilterObject.showFilterOptionsList();const s=document.getElementById(t);""!=e&&(null==s||s.appendChild(e)),localStorage.setItem("filterStatus",JSON.stringify(this.FilterObject.status()))},icon:p.filterIconSvg()},{id:"voice",title:"Leer en voz alta",subtitle:"Atajo de teclado [Ctrl + Space]",status:this.ScreenReaderObject.status(),toggle:()=>{this.ScreenReaderObject.toggleStatus(),localStorage.setItem("readerStatus",JSON.stringify(this.ScreenReaderObject.status()))},icon:p.voiceIconSvg()}];if(e.forEach((e=>{const s=new m(e.id,e.title,e.subtitle,e.icon,e.status,e.toggle).getElement();t.appendChild(s),console.log("Creado",e.id,e.status)})),document.body.appendChild(t),this.FilterObject.status()){var s=this.FilterObject.showFilterOptionsList();const t=document.getElementById("filter-card-option-eyeassist");console.log(t),""!=s&&(null==t||t.appendChild(s))}this.viewOptionsOn=!this.viewOptionsOn},this.cerrarModal=()=>{if(!this.animacionEnProgreso){const t=document.getElementById("eyeeasist-initial-message"),e=document.getElementById("fly_menu");this.animacionEnProgreso=!0;const s=null==t?void 0:t.animate([{opacity:1,transform:"translateY(0)"},{opacity:0,transform:"translateY(-100%)"}],{duration:300,easing:"ease-out"}),i=null==e?void 0:e.animate([{top:"70px"},{top:"30px"}],{duration:1e3,easing:"ease"});s&&i&&(s.onfinish=()=>{t&&(t.style.display="none"),this.animacionEnProgreso=!1,localStorage.setItem("initMessageClose","true")},i.onfinish=()=>{e&&(e.style.top="30px")})}},"true"==localStorage.getItem("initMessageClose")&&(this.initMessageClose=!0),h.toggleSwitchClasses(),h.addBufferOptionsClass(),h.addFlyMenuStyle(),h.addOptionFunctionsClass(),h.overlayStyleClass(),this.zoomStatus=t,this.filterStatus=e,this.readerStatus=i;const o=localStorage.getItem("zoomStatus");o&&(console.log("Hay zoom status guardado",JSON.parse(o)),this.zoomStatus=JSON.parse(o));const l=localStorage.getItem("filterStatus");l&&(console.log("Hay filter status guardado",JSON.parse(l)),this.filterStatus=JSON.parse(l));const r=localStorage.getItem("readerStatus");r&&(console.log("Hay reader status guardado",JSON.parse(r)),this.readerStatus=JSON.parse(r)),this.ZoomObject=new d(this.zoomStatus),this.FilterObject=new s(this.filterStatus),this.ScreenReaderObject=new a(this.readerStatus,this.token)}start(){this.showInitMessage(),this.showFlyMenu(),document.addEventListener("keydown",(t=>{console.log(t.key),this.ZoomObject.activeZoom(this.ScreenReaderObject.enable(),t),this.ScreenReaderObject.keybindsScreenReader(t)}))}showFlyMenu(){const t=document.createElement("div");t.id="fly_menu",t.className="fly_menu",t.style.top=this.initMessageClose?"30px":"70px",t.appendChild(h.svgHuman("#006400")),t.addEventListener("click",this.showOptionsView),document.body.appendChild(t)}showInitMessage(){let t=document.createElement("div");t=h.mainMessage(t),t.id="eyeeasist-initial-message",this.initMessageClose&&(t.style.display="none");let e=document.createElement("div");e=h.messageContent(e);let s=document.createElement("span");s.textContent="Esta p√°gina cuenta con herramientas de accesibilidad. Para activar y/o desactivar estas herramientas presiona cmd + A o haz click en el bot√≥n";let i=document.createElement("button");i=h.closeButtom(i),i.addEventListener("click",this.cerrarModal),i.appendChild(h.svgCloseButtom("#006400")),e.appendChild(s),e.appendChild(h.svgHuman("#006400","20","20")),t.appendChild(e),t.appendChild(i),document.body.insertBefore(t,document.body.firstChild)}}(!0,!0,!0).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,