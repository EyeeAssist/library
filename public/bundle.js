(()=>{"use strict";class e{constructor(){this.hasInsertedAccess=!1,this.active_filter=!1,this.colorBlindnessClasses=["protanopia","protanomaly","deuteranopia","deuteranomaly","tritanopia","tritanomaly","achromatopsia","achromatomaly","grayscale"],this.visionClasses=["vision-loss-moderate","vision-loss-severe","vision-blindness"],this.cssFilter="\n  <style>.protanopia{-webkit-filter:url(#protanopia) grayscale(0)!important;filter:url(#protanopia) grayscale(0)!important}.protanomaly{-webkit-filter:url(#protanomaly) grayscale(0)!important;filter:url(#protanomaly) grayscale(0)!important}.deuteranopia{-webkit-filter:url(#deuteranopia) grayscale(0)!important;filter:url(#deuteranopia) grayscale(0)!important}.deuteranomaly{-webkit-filter:url(#deuteranomaly) grayscale(0)!important;filter:url(#deuteranomaly) grayscale(0)!important}.tritanopia{-webkit-filter:url(#tritanopia) grayscale(0)!important;filter:url(#tritanopia) grayscale(0)!important}.tritanomaly{-webkit-filter:url(#tritanomaly) grayscale(0)!important;filter:url(#tritanomaly) grayscale(0)!important}.achromatopsia{-webkit-filter:url(#achromatopsia) grayscale(0)!important;filter:url(#achromatopsia) grayscale(0)!important}.achromatomaly{-webkit-filter:url(#achromatomaly) grayscale(0)!important;filter:url(#achromatomaly) grayscale(0)!important}.grayscale{-webkit-filter:grayscale(100%)!important;filter:grayscale(100%)!important}.vision-loss-moderate body>*{-webkit-filter:blur(1px)!important;filter:blur(1px)!important}.vision-loss-severe body>*{-webkit-filter:blur(10px)!important;filter:blur(10px)!important}.vision-blindness body>*{background-color:#fff!important;-webkit-filter:brightness(0)!important;filter:brightness(0)!important}#access-filter{border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;width:1px;overflow:hidden;position:absolute!important;word-wrap:normal!important}</style>",this.svgFilterTemplate='<svg \n  id="access-filter"\n  aria-hidden="true"\n  xmlns="http://www.w3.org/2000/svg"\n  version="1.1">\n  <defs>\n    <filter id="protanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.567, 0.433, 0,     0, 0\n                0.558, 0.442, 0,     0, 0\n                0,     0.242, 0.758, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="protanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.817, 0.183, 0,     0, 0\n                0.333, 0.667, 0,     0, 0\n                0,     0.125, 0.875, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="deuteranopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.625, 0.375, 0,   0, 0\n                0.7,   0.3,   0,   0, 0\n                0,     0.3,   0.7, 0, 0\n                0,     0,     0,   1, 0"/>\n    </filter>\n    <filter id="deuteranomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.8,   0.2,   0,     0, 0\n                0.258, 0.742, 0,     0, 0\n                0,     0.142, 0.858, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanopia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.95, 0.05,  0,     0, 0\n                0,    0.433, 0.567, 0, 0\n                0,    0.475, 0.525, 0, 0\n                0,    0,     0,     1, 0"/>\n    </filter>\n    <filter id="tritanomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.967, 0.033, 0,     0, 0\n                0,     0.733, 0.267, 0, 0\n                0,     0.183, 0.817, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatopsia">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0.299, 0.587, 0.114, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n    <filter id="achromatomaly">\n      <feColorMatrix\n        in="SourceGraphic"\n        type="matrix"\n        values="0.618, 0.320, 0.062, 0, 0\n                0.163, 0.775, 0.062, 0, 0\n                0.163, 0.320, 0.516, 0, 0\n                0,     0,     0,     1, 0"/>\n    </filter>\n  </defs>\n</svg>'}aplicarFiltro(e){null!=e?(this.active_filter?this.removeTests("colorBlindness"):this.toggleTest("colorBlindness",e),this.active_filter=!this.active_filter):console.error("Error al aplicar los filtros, la opcion no se pintada correctamente")}toggleTest(e,t){this.hasInsertedAccess||(this.insertFiles(this.svgFilterTemplate,this.cssFilter),this.hasInsertedAccess=!0),this.removeTests(e),document.documentElement.classList.add(t)}insertFiles(e,t){document.body.insertAdjacentHTML("beforeend",e),document.body.insertAdjacentHTML("beforeend",t)}removeTests(e){if("vision"==e)for(let e=0;e<this.visionClasses.length;e++)document.documentElement.classList.remove(this.visionClasses[e]);else if("colorBlindness"==e)for(let e=0;e<this.colorBlindnessClasses.length;e++)document.documentElement.classList.remove(this.colorBlindnessClasses[e])}}class t{static addFilterBufferStyleClass(){const e=document.styleSheets[0];e.insertRule("\n        .filter-list-buffer {\n          display: flex;\n          flex-wrap: wrap;\n          flex-direction: column;\n          align-content: center;\n        }\n    ",e.cssRules.length)}static addFilterOptionsStyleClass(){const e=document.styleSheets[0];e.insertRule("\n        .filter-option {\n          padding: 0.5rem;\n        }\n    ",e.cssRules.length)}static addFilterStyleClass(){const e=document.styleSheets[0];e.insertRule("\n        .filter_button {\n          position: fixed;\n          top: 20px;\n          right: 20px;\n          width: 50px;\n          height: 50px;\n          border-radius: 50%;\n          background-color: #243c5a;\n          color: #ffffff;\n          text-align: center;\n          line-height: 50px;\n          cursor: pointer;\n          z-index: 9999;\n        }\n    ",e.cssRules.length)}}class s{constructor(s=!1){this.enableFilter=s,this.filterViewOn=!1,this.startFilter=e=>{var t,s=null===(t=e.target.textContent)||void 0===t?void 0:t.toLowerCase();this.filterService.aplicarFiltro(s)},this.showFilterOptionsList=()=>{if(!this.enableFilter){var e=document.getElementById("filter_buffer");return null==e?void console.error("No hay instancia del buffer de opciones."):(e.remove(),"")}var t=document.createElement("div");return t.className="filter-list-buffer",t.id="filter_buffer",[{id:"protanopia",name:"Protanopia"},{id:"protanomaly",name:"Protanomaly"},{id:"deuteranopia",name:"Deuteronopia"},{id:"deuteranomaly",name:"Deuteranomaly"},{id:"tritanopia",name:"Tritanopia"},{id:"tritanomaly",name:"Tritanomaly"},{id:"achromatopsia",name:"Achromatopsia"},{id:"achromatomaly",name:"Achromatomaly"},{id:"grayscale",name:"Grayscale"}].forEach((e=>{t.appendChild(this.buildFilterOption(e))})),t},this.filterService=new e,t.addFilterBufferStyleClass(),t.addFilterOptionsStyleClass()}status(){return this.enableFilter}toggleStatus(){this.enableFilter=!this.enableFilter}showFilterOptions(){const e=document.createElement("img");e.src="https://github.com/EyeeAssist/docs/blob/develop/src/assets/logo.png?raw=true",e.style.width="50px",e.style.borderRadius="50%";const s=document.createElement("div");s.className="filter_button",s.id="filter_button",s.appendChild(e),s.addEventListener("click",this.showFilterOptionsList),t.addFilterStyleClass(),document.body.appendChild(s)}buildFilterOption(e){var t=document.createElement("div");t.className="filter-option",t.style.display="flex",t.id=e.id+"_option",t.addEventListener("click",this.startFilter);const s=document.createElement("div"),i=document.createElement("input");i.type="radio",i.style.margin="0",s.style.marginLeft="6px";const n=document.createElement("span");return n.textContent=e.name,n.style.marginLeft="12px",s.append(i),t.append(s),t.append(n),t}}class i{constructor(e=!1,t){this.foundVideo=e,this.talk=t,this.onPlayerStateChange=e=>{e.data===YT.PlayerState.PAUSED&&clearInterval(this.interval),e.data==YT.PlayerState.ENDED&&clearInterval(this.interval),e.data===YT.PlayerState.PLAYING&&(this.interval=setInterval((()=>{var e,t,s;const i=null===(e=this.player)||void 0===e?void 0:e.getCurrentTime(),n=null==i?void 0:i.toFixed(1);(null===(t=this.script)||void 0===t?void 0:t.get(n))&&this.talk(null===(s=this.script)||void 0===s?void 0:s.get(n))}),100))}}toggleStatus(){this.foundVideo=!this.foundVideo}turnOff(){this.foundVideo=!1}startAudioDescription(e){var t,s,i;this.foundVideo&&!0===e.shiftKey&&"k"===e.key.toLowerCase()&&((null===(t=this.player)||void 0===t?void 0:t.getPlayerState())==YT.PlayerState.PLAYING?null===(s=this.player)||void 0===s||s.pauseVideo():null===(i=this.player)||void 0===i||i.playVideo())}createPlayer(e){let t=e;t.id="single-video-eyeeassit",this.script=this.getScript(t.src);const s=t.src.indexOf("?");t.src=t.src.substring(0,s+1)+"enablejsapi=1&"+t.src.substring(s+1),this.player=new YT.Player(t.id,{events:{onStateChange:this.onPlayerStateChange}})}getScript(e){const t=new Map;return t.set("1.0","Paisaje de una playa"),t.set("13.0","Paisaje de unas mota√±as y una bandera ondeando"),t.set("28.0","Paisaje con una costa y olas rompiendo"),t.set("40.0","Una laguna artificial"),t.set("56.0","Un rio largo"),t}}var n=function(e,t,s,i){return new(s||(s=Promise))((function(n,o){function a(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,r)}l((i=i.apply(e,t||[])).next())}))};class o{constructor(e=!1,t=""){var s;if(this.useScreenReader=e,this.token=t,this.synth=window.speechSynthesis,this.screenReaderStatus=!1,this.selectedArticle=null,this.selectedLink=null,this.articleIndex=-1,this.linkIndex=0,this.controller=new AbortController,this.videoProcesor=null,this.tags=[],this.talk=(e,t=!0)=>{!t||this.synth.cancel(),this.synth.speak(new SpeechSynthesisUtterance(e))},this.cancelTalk=()=>{this.controller&&this.controller.abort(),this.talk("")},!this.useScreenReader)return;let n=document.createElement("script");n.src="https://www.youtube.com/iframe_api";let o=document.getElementsByTagName("script")[0];null===(s=o.parentNode)||void 0===s||s.insertBefore(n,o),this.videoProcesor=new i(!1,this.talk)}status(){return this.useScreenReader}toggleStatus(){this.useScreenReader=!this.useScreenReader}enable(){return this.screenReaderStatus}sayWelcome(){this.talk("Hola bienvenido a la pagina X, si desea leer las acciones de la pagina presione control y enter")}sayGoodbay(){this.talk("Gracias por utilizar eyeeassist")}keybindsScreenReader(e){var t;this.cancelReader(e),this.reRead(e),this.activeScreenReader(e),this.moveBetweenContent(e),this.moveBetweenLinks(e),null===(t=this.videoProcesor)||void 0===t||t.startAudioDescription(e)}getImage(e){return n(this,void 0,void 0,(function*(){return yield fetch(e)}))}getDescription(e){return n(this,void 0,void 0,(function*(){this.controller=new AbortController;const t=new FormData;t.append("file",e,"imagen.jpg");const s={method:"POST",body:t,headers:{Authorization:"Bearer "+this.token},signal:this.controller.signal},i=yield fetch("http://localhost:8000/caption",s).catch((e=>{"AbortError"===e.name&&console.error(e)}));return null!=i?(yield i.json()).message[0]:""}))}readChilds(e){var t,s,i;return n(this,void 0,void 0,(function*(){if("IFRAME"==e.nodeName&&(this.talk("Video encontrado, precione shift mas k para iniciar el video con audio descripcion"),null===(t=this.videoProcesor)||void 0===t||t.toggleStatus(),null===(s=this.videoProcesor)||void 0===s||s.createPlayer(e)),"IMG"==e.nodeName){this.talk("Imagen encontrada",!1);let t=e;if(""!=t.alt)this.talk(""),this.talk("Imagen de "+t.alt,!1);else{const e=yield this.getImage(t.src),s=yield e.blob();this.talk("describiendo imagen",!1);const i=yield this.getDescription(s);""!=i?this.talk("Imagen de "+i,!1):this.talk("No se pudo generar una descripcion para la imagen encontrada.",!1)}}e.nodeType==Node.TEXT_NODE&&(null===(i=e.textContent)||void 0===i?void 0:i.trim())&&this.talk(e.textContent,!1);for(const t of Array.from(e.childNodes))yield this.readChilds(t)}))}moveBetweenContent(e){if(0!=this.tags.length){if(this.screenReaderStatus&&!0===e.ctrlKey&&"arrowright"===e.key.toLowerCase()){let e=this.tags.shift();this.tags.push(e),this.cancelTalk(),this.readChilds(e)}if(this.screenReaderStatus&&!0===e.ctrlKey&&"arrowleft"===e.key.toLowerCase()){let e=this.tags.pop();this.tags.unshift(e),this.cancelTalk(),this.readChilds(e)}}}activeScreenReader(e){this.useScreenReader&&!0===e.ctrlKey&&" "===e.key.toLowerCase()&&(this.screenReaderStatus?(this.tags=[],this.sayGoodbay()):(this.tags=this.convertToHtmlElementsArray(document.getElementsByTagName("article")),this.sayWelcome()),this.screenReaderStatus=!this.screenReaderStatus)}moveBetweenLinks(e){if(this.screenReaderStatus&&!1===e.ctrlKey&&"enter"===e.key.toLowerCase()&&null!=this.selectedLink&&(console.log(this.selectedLink),this.selectedLink.click()),this.screenReaderStatus&&!0===e.ctrlKey&&"enter"===e.key.toLowerCase()){let e=document.getElementsByClassName("text_reader_link");console.log(e[this.linkIndex].tagName),this.selectedLink=e[this.linkIndex],this.selectedLink.focus(),"TEXTAREA"==e[this.linkIndex].tagName?(this.selectedLink.addEventListener("input",(()=>{console.log(this.selectedLink)})),this.talk("Seleccionado un text area",!0)):null!==this.selectedLink.textContent&&this.talk(this.selectedLink.textContent,!0),this.linkIndex===e.length-1?this.linkIndex=0:this.linkIndex+=1}}cancelReader(e){this.useScreenReader&&"escape"===e.key.toLowerCase()&&this.talk("")}reRead(e){this.useScreenReader&&!0===e.ctrlKey&&"backspace"===e.key.toLowerCase()&&null!=this.selectedArticle&&null!=this.selectedArticle.textContent&&this.talk(this.selectedArticle.textContent)}convertToHtmlElementsArray(e){let t=[];for(const s of e)t.push(s);return t}}class a{static addZoomMessageTextBoxClass(){const e=document.styleSheets[0];e.insertRule(".zoom-message-txtbox {  \n          display: flex;\n          align-items: center;\n          justify-content: center;\n          position: fixed;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          z-index: 9999;\n          background-color: #FFFF00;\n          color: #000000;\n          font-size: 20rem;\n          text-align: center;\n          width: 80%;\n          height: 80%;\n          font-family: Arial, sans-serif;\n      }",e.cssRules.length)}}class r{constructor(){this.TRANSITION_DURATION=800,this.level=1,this.mouseX=0,this.mouseY=0,this.panEngageTimeout=-1,this.panUpdateInterval=-1,this.callbackTimeout=-1,this.supportsTransforms="WebkitTransform"in document.body.style||"MozTransform"in document.body.style||"msTransform"in document.body.style||"OTransform"in document.body.style||"transform"in document.body.style,this.keyupEvent=e=>{1!==this.level&&27===e.keyCode&&this.out(void 0)},this.mouseMoveEvent=e=>{1!==this.level&&(this.mouseX=e.clientX,this.mouseY=e.clientY)},this.supportsTransforms&&(document.body.style.transition="transform "+this.TRANSITION_DURATION+"ms ease"),document.addEventListener("keyup",this.keyupEvent),document.addEventListener("mousemove",this.mouseMoveEvent)}magnify(e,t){var s=this.getScrollOffset();if(e.width=e.width||1,e.height=e.height||1,e.x-=(window.innerWidth-e.width*t)/2,e.y-=(window.innerHeight-e.height*t)/2,this.supportsTransforms)if(1===t)document.body.style.transform="";else{var i=s.x+"px "+s.y+"px",n="translate("+-e.x+"px,"+-e.y+"px) scale("+t+")";document.body.style.transformOrigin=i,document.body.style.transform=n}else 1===t?(document.body.style.position="",document.body.style.left="",document.body.style.top="",document.body.style.width="",document.body.style.height=""):(document.body.style.position="relative",document.body.style.left=-(s.x+e.x)/t+"px",document.body.style.top=-(s.y+e.y)/t+"px",document.body.style.width=100*t+"%",document.body.style.height=100*t+"%");this.level=t}pan(){var e=.12*window.innerWidth,t=.12*window.innerHeight,s=this.getScrollOffset();this.mouseY<t?window.scroll(s.x,s.y-(1-this.mouseY/t)*(14/this.level)):this.mouseY>window.innerHeight-t&&window.scroll(s.x,s.y+(1-(window.innerHeight-this.mouseY)/t)*(14/this.level)),this.mouseX<e?window.scroll(s.x-(1-this.mouseX/e)*(14/this.level),s.y):this.mouseX>window.innerWidth-e&&window.scroll(s.x+(1-(window.innerWidth-this.mouseX)/e)*(14/this.level),s.y)}getScrollOffset(){return{x:void 0!==window.scrollX?window.scrollX:window.pageXOffset,y:void 0!==window.scrollY?window.scrollY:window.pageYOffset}}to(e){if(1!==this.level)this.out(void 0);else{if(e.x=e.x||0,e.y=e.y||0,e.element){var t="number"==typeof e.padding?e.padding:20,s=e.element.getBoundingClientRect();e.x=s.left-t,e.y=s.top-t,e.width=s.width+2*t,e.height=s.height+2*t}void 0!==e.width&&void 0!==e.height&&(e.scale=Math.max(Math.min(window.innerWidth/e.width,window.innerHeight/e.height),1)),e.scale>1&&(e.x*=e.scale,e.y*=e.scale,e.x=Math.max(e.x,0),e.y=Math.max(e.y,0),this.magnify(e,e.scale),!1!==e.pan&&(this.panEngageTimeout=setTimeout(this.calculatePanUpdateInterval,this.TRANSITION_DURATION)),"function"==typeof e.callback&&(this.callbackTimeout=setTimeout(e.callback,this.TRANSITION_DURATION)))}}calculatePanUpdateInterval(){this.panUpdateInterval=setInterval(this.pan,1e3/60)}out(e){clearTimeout(this.panEngageTimeout),clearInterval(this.panUpdateInterval),clearTimeout(this.callbackTimeout),this.magnify(new l(0,0,1),1),e&&"function"==typeof e.callback&&setTimeout(e.callback,this.TRANSITION_DURATION),this.level=1}}class l{constructor(e,t,s){this.x=0,this.y=0,this.scale=0,this.x=e,this.y=t,this.scale=s}}class c{constructor(e=!1){this.enableZoomOptions=e,this.zoomStatus=!1,this.active_message='<div id="zoom-status" class="zoom-message-txtbox">On</div>',this.deactive_message='<div id="zoom-status" class="zoom-message-txtbox">Off</div>',this.toogleZoom=e=>{this.zoomService.to(new l(e.x,e.y,10))},this.zoomService=new r}status(){return this.enableZoomOptions}toogleStatus(){this.enableZoomOptions=!this.enableZoomOptions}activeZoom(e,t){this.enableZoomOptions&&(e||!0!==t.ctrlKey||"backspace"!==t.key.toLowerCase()||(a.addZoomMessageTextBoxClass(),this.initialClickEvent(document.body)))}initialClickEvent(e){this.zoomStatus?this.showBoxMessage(e,this.deactive_message,!this.zoomStatus):this.showBoxMessage(e,this.active_message,!this.zoomStatus),this.zoomStatus=!this.zoomStatus}showBoxMessage(e,t,s){e.insertAdjacentHTML("beforebegin",t),setTimeout((()=>{const e=document.getElementById("zoom-status");null==e||e.remove()}),2e3),s?e.addEventListener("click",this.toogleZoom):e.removeEventListener("click",this.toogleZoom)}}class d{static mainMessage(e){return e.style.display="flex",e.style.alignItems="center",e.style.alignContent="center",e.style.justifyItems="center",e.style.justifyContent="center",e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.backgroundColor="#F5F5DC",e.style.zIndex="999",e.style.color="#006400",e}static messageContent(e){return e.style.textAlign="center",e.style.flex="1",e.style.display="flex",e.style.alignContent="center",e.style.justifyContent="center",e}static closeButtom(e){return e.style.background="none",e.style.border="none",e.style.padding="0",e.style.margin="0",e.style.cursor="pointer",e.style.width="50px",e.style.height="50px",e.style.alignSelf="flex-end",e.style.color="#006400",e}static addFlyMenuStyle(){const e=document.styleSheets[0];e.insertRule("\n        .fly_menu {\n          position: fixed;\n          right: 70px;\n          width: 72px;\n          height: 72px;\n          border-radius: 50%;\n          background-color: #F5F5DC;\n          color: #006400;\n          text-align: center;\n          line-height: 50px;\n          flex-wrap: wrap;\n          cursor: pointer;\n          display: flex;\n          align-content: center;\n          justify-content: center;\n          z-index: 9999;\n        }\n    ",e.cssRules.length)}static svgHuman(e,t="34",s="38"){const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttribute("width",t),i.setAttribute("height",s),i.setAttribute("viewBox","0 0 34 38"),i.setAttribute("xmlns","http://www.w3.org/2000/svg");const n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d","M33.5 13.5H22.5V37.3333H18.8333V26.3333H15.1667V37.3333H11.5V13.5H0.5V9.83332H33.5M17 0.666656C17.9725 0.666656 18.9051 1.05296 19.5927 1.7406C20.2804 2.42823 20.6667 3.36086 20.6667 4.33332C20.6667 5.30578 20.2804 6.23841 19.5927 6.92605C18.9051 7.61368 17.9725 7.99999 17 7.99999C16.0275 7.99999 15.0949 7.61368 14.4073 6.92605C13.7196 6.23841 13.3333 5.30578 13.3333 4.33332C13.3333 2.29832 14.965 0.666656 17 0.666656Z"),n.setAttribute("fill",e),i.appendChild(n),i}static svgCloseButtom(e){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.setAttribute("fill",e),t.setAttribute("viewBox","0 0 32 32");const s=document.createElementNS("http://www.w3.org/2000/svg","path");return s.setAttribute("d","M7.004 23.087l7.08-7.081-7.07-7.071L8.929 7.02l7.067 7.069L23.084 7l1.912 1.913-7.089 7.093 7.075 7.077-1.912 1.913-7.074-7.073L8.917 25z"),t.appendChild(s),t}static addBufferOptionsClass(){const e=document.styleSheets[0];e.insertRule("\n        .buffer_options {\n            position: fixed;\n            top: 130px;\n            right: 70px;\n            border-radius: 10px;\n            height: auto; \n            max-height: 100%;\n            overflow-y: auto; \n            z-index: 9999;\n            background-color: #F5F5DC;\n            color: #006400;\n        }\n    ",e.cssRules.length)}static toggleSwitchClasses(){this.toogleSwitchClass(),this.toggleSwitchCircle(),this.toggleSwitchActive(),this.toggleSwitchAnimation()}static toogleSwitchClass(){const e=document.styleSheets[0];e.insertRule("\n        .toggle-switch {\n            width: 60px;\n            height: 30px;\n            background-color: #ccc;\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            cursor: pointer;\n            transition: background-color 0.3s, transform 0.3s;\n        }\n    ",e.cssRules.length)}static toggleSwitchCircle(){const e=document.styleSheets[0];e.insertRule("\n        .toggle-switch-circle {\n            width: 30px;\n            height: 30px;\n            background-color: white;\n            border-radius: 50%;\n            transition: transform 0.3s;\n        }",e.cssRules.length)}static toggleSwitchActive(){const e=document.styleSheets[0];e.insertRule("\n        .toggle-switch.active {\n            background-color: #2ecc71;\n        }",e.cssRules.length)}static toggleSwitchAnimation(){const e=document.styleSheets[0];e.insertRule("\n        .toggle-switch.active .toggle-switch-circle {\n            transform: translateX(30px);\n        }",e.cssRules.length)}static addOptionFunctionsClass(){const e=document.styleSheets[0];e.insertRule("\n        .option_menu_eyeeassist {\n          display: flex;\n          padding: 10px;\n          justify-content: space-between;\n        }",e.cssRules.length)}}new class{constructor(e=!1,t=!1,i=!1,n=""){this.token=n,this.animacionEnProgreso=!1,this.initMessageClose=!1,this.viewOptionsOn=!1,this.buildOption=e=>{var t;const s=document.createElement("div");var i=document.createElement("div");s.id="option_menu_eyeassist_"+e.name;const n=document.createElement("div");n.textContent=e.display_name,n.style.paddingRight="20px";const o=document.createElement("div");o.className="toggle-switch",o.id="toggleSwitch"+e.name;const a=document.createElement("div");if(a.className="toggle-switch-circle",o.appendChild(a),o.addEventListener("click",(e=>{var t;switch(o.id){case"toggleSwitchZoom":this.ZoomObject.toogleStatus(),localStorage.setItem("zoomStatus",JSON.stringify(this.ZoomObject.status()));break;case"toggleSwitchColors":this.FilterObject.toggleStatus();var s=this.FilterObject.showFilterOptionsList();null===(t=i.parentElement)||void 0===t||t.append(s),localStorage.setItem("filterStatus",JSON.stringify(this.FilterObject.status()));break;case"toggleSwitchReader":this.ScreenReaderObject.toggleStatus(),localStorage.setItem("readerStatus",JSON.stringify(this.ScreenReaderObject.status()))}o.classList.toggle("active")})),i.className="option_menu_eyeeassist",i.append(n),i.append(o),s.append(i),e.status&&(o.classList.toggle("active"),"Colors"==e.name)){console.log("Agregando colores");var r=this.FilterObject.showFilterOptionsList();null===(t=i.parentElement)||void 0===t||t.append(r)}return s},this.showOptions=()=>{if(console.log("Mostrando opciones"),this.viewOptionsOn){const e=document.getElementById("buffer_options");return null==e||e.remove(),void(this.viewOptionsOn=!this.viewOptionsOn)}const e=document.createElement("div");e.id="buffer_options",e.className="buffer_options",[{name:"Zoom",status:this.ZoomObject.status(),display_name:"Zoom"},{name:"Colors",status:this.FilterObject.status(),display_name:"Filtros de color"},{name:"Reader",status:this.ScreenReaderObject.status(),display_name:"Lectura en voz alta"}].forEach((t=>{e.appendChild(this.buildOption(t))})),document.body.appendChild(e),this.viewOptionsOn=!this.viewOptionsOn},this.cerrarModal=()=>{if(!this.animacionEnProgreso){const e=document.getElementById("eyeeasist-initial-message"),t=document.getElementById("fly_menu");this.animacionEnProgreso=!0;const s=null==e?void 0:e.animate([{opacity:1,transform:"translateY(0)"},{opacity:0,transform:"translateY(-100%)"}],{duration:300,easing:"ease-out"}),i=null==t?void 0:t.animate([{top:"70px"},{top:"30px"}],{duration:1e3,easing:"ease"});s&&i&&(s.onfinish=()=>{e&&(e.style.display="none"),this.animacionEnProgreso=!1,localStorage.setItem("initMessageClose","true")},i.onfinish=()=>{t&&(t.style.top="30px")})}},"true"==localStorage.getItem("initMessageClose")&&(this.initMessageClose=!0),d.toggleSwitchClasses(),d.addBufferOptionsClass(),d.addFlyMenuStyle(),d.addOptionFunctionsClass(),this.zoomStatus=e,this.filterStatus=t,this.readerStatus=i;const a=localStorage.getItem("zoomStatus");a&&(console.log("Hay zoom status guardado",JSON.parse(a)),this.zoomStatus=JSON.parse(a));const r=localStorage.getItem("filterStatus");r&&(console.log("Hay filter status guardado",JSON.parse(r)),this.filterStatus=JSON.parse(r));const l=localStorage.getItem("readerStatus");l&&(console.log("Hay reader status guardado",JSON.parse(l)),this.readerStatus=JSON.parse(l)),this.ZoomObject=new c(this.zoomStatus),this.FilterObject=new s(this.filterStatus),this.ScreenReaderObject=new o(this.readerStatus,this.token)}start(){this.showInitMessage(),this.showFlyMenu(),document.addEventListener("keydown",(e=>{console.log(e.key),this.ZoomObject.activeZoom(this.ScreenReaderObject.enable(),e),this.ScreenReaderObject.keybindsScreenReader(e)}))}showFlyMenu(){const e=document.createElement("div");e.id="fly_menu",e.className="fly_menu",e.style.top=this.initMessageClose?"30px":"70px",e.appendChild(d.svgHuman("#006400")),e.addEventListener("click",this.showOptions),document.body.appendChild(e)}showInitMessage(){let e=document.createElement("div");e=d.mainMessage(e),e.id="eyeeasist-initial-message",this.initMessageClose&&(e.style.display="none");let t=document.createElement("div");t=d.messageContent(t);let s=document.createElement("span");s.textContent="Esta p√°gina cuenta con herramientas de accesibilidad. Para activar y/o desactivar estas herramientas presiona cmd + A o haz click en el bot√≥n";let i=document.createElement("button");i=d.closeButtom(i),i.addEventListener("click",this.cerrarModal),i.appendChild(d.svgCloseButtom("#006400")),t.appendChild(s),t.appendChild(d.svgHuman("#006400","20","20")),e.appendChild(t),e.appendChild(i),document.body.insertBefore(e,document.body.firstChild)}}(!0,!0,!0).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,